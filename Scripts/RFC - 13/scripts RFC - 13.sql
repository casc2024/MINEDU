/*
RFC - 13
SECCION V -   Asignaciones e Incentivos (Pestaña subsidio por luto o sepelio)
QUITAR
Otorgar subsidio por gastos de sepelio
*/


-- SUBSIDIO POR FALLECIMIENTO
BEGIN TRY 
	DECLARE @V_MOTIVO_ACCION INT = 0
	SET @V_MOTIVO_ACCION = (SELECT MAX(ID_MOTIVO_ACCION) FROM  sistema.motivo_accion (NOLOCK))
	INSERT INTO sistema.motivo_accion
		(ID_ACCION, CODIGO_MOTIVO_ACCION, CODIGO_ORIGEN, DESCRIPCION_MOTIVO_ACCION, ES_VIGENTE, FECHA_INICIO_VIGENCIA, FECHA_CREACION, USUARIO_CREACION, ES_BORRADO)
	VALUES 
		(304, (@V_MOTIVO_ACCION + 1), 0, 'SUBSIDIO POR FALLECIMIENTO', 1, GETDATE(), GETDATE(), '42813053', 0)
	UPDATE sistema.motivo_accion SET ES_VIGENTE =0 WHERE ID_MOTIVO_ACCION IN (726)
	END TRY  
	BEGIN CATCH  
		SELECT         
			'Actualizar tabla transaccional.sancion_por_servidor_publico' AS OPERACION,
			ERROR_MESSAGE() AS MensajeError;  
END CATCH;  
GO


-- CREAR LA REGLA
DECLARE @CODIGO INT 
SELECT	@CODIGO = MAX(CODIGO_ENTIDAD_REGLA) + 1
	FROM	sistema.entidad_regla AS ER WITH (NOLOCK)
INSERT sistema.entidad_regla 
	(CODIGO_ENTIDAD_REGLA, ID_REGLA, ID_ENTIDAD, ID_REGISTRO_ENTIDAD, ES_VIGENTE, FECHA_CREACION, USUARIO_CREACION, ES_BORRADO, OBLIGATORIA)
VALUES
	(@CODIGO, 36, 23, 1898, 1, GETDATE(), '42813053', 0, 0)

-- QUITAR OTORGAR SUBSIDIO POR LUTO
update sistema.accion set ES_VIGENTE = 0 where ID_ACCION = 305


-- SUBSIDIO POR GASTOS DE SEPELIO O SERVICIO FUNERARIO COMPLETO
BEGIN TRY 
DECLARE @V_MOTIVO_ACCION INT = 0
SET @V_MOTIVO_ACCION = (SELECT MAX(ID_MOTIVO_ACCION) FROM  sistema.motivo_accion (NOLOCK))
	INSERT INTO sistema.motivo_accion
		(ID_ACCION, CODIGO_MOTIVO_ACCION, CODIGO_ORIGEN, DESCRIPCION_MOTIVO_ACCION, ES_VIGENTE, FECHA_INICIO_VIGENCIA, FECHA_CREACION, USUARIO_CREACION, ES_BORRADO)
	VALUES 
		(306, (@V_MOTIVO_ACCION + 1), 0, 'SUBSIDIO POR GASTOS DE SEPELIO O SERVICIO FUNERARIO COMPLETO', 1, GETDATE(), GETDATE(), '42813053', 0)
	-- QUITAR: OTORGAR SUBSIDIO POR LUTO Y GASTOS DE SEPELIO
	UPDATE sistema.motivo_accion SET ES_VIGENTE =0 WHERE ID_MOTIVO_ACCION IN (585)
END TRY  
BEGIN CATCH  
    SELECT         
		'Actualizar tabla transaccional.sancion_por_servidor_publico' AS OPERACION,
        ERROR_MESSAGE() AS MensajeError;  
END CATCH;  
GO	
	
-- Registro de regla
/*
- SUBSIDIO POR FALLECIMIENTO
- SUBSIDIO POR GASTOS DE SEPELIO O SERVICIO FUNERARIO COMPLETO
*/
DECLARE @ID_MOTIVO_ACCION INT = 1899
DECLARE @ID_COMPONENTE INT
DECLARE @ID_FORMULARIO INT
DECLARE @ID_COMPONENTE_FORMULARIO INT
DECLARE @ORDEN INT
DECLARE @ES_VISIBLE INT
DECLARE @ES_EDITABLE INT
DECLARE @ES_OBLIGATORIO INT
DECLARE @ES_VIGENTE INT
DECLARE @ES_BORRADO INT

DECLARE CURSOR_MOTIVO_ACCION_COMPONENTE_FORMULARIO CURSOR 
  LOCAL STATIC READ_ONLY FORWARD_ONLY
FOR 
SELECT 
	   ID_COMPONENTE,
	   ID_FORMULARIO, 
	   ID_COMPONENTE_FORMULARIO,
	   ORDEN, 
	   ES_VISIBLE,
	   ES_EDITABLE,
	   ES_OBLIGATORIO,
	   ES_VIGENTE,	   
	   ES_BORRADO
FROM sistema.motivo_accion_componente_formulario AS MC WITH (NOLOCK) WHERE	MC.ID_MOTIVO_ACCION IN (585) ORDER BY ORDEN ASC;  

OPEN CURSOR_MOTIVO_ACCION_COMPONENTE_FORMULARIO 
FETCH NEXT FROM CURSOR_MOTIVO_ACCION_COMPONENTE_FORMULARIO  INTO @ID_COMPONENTE, @ID_FORMULARIO, @ID_COMPONENTE_FORMULARIO, @ORDEN, @ES_VISIBLE, @ES_EDITABLE, @ES_OBLIGATORIO, @ES_VIGENTE, @ES_BORRADO
WHILE @@FETCH_STATUS = 0
BEGIN 
    --Do something with Id here
	PRINT @ID_MOTIVO_ACCION
	PRINT @ID_COMPONENTE
	PRINT @ID_FORMULARIO
	PRINT @ID_COMPONENTE_FORMULARIO
	PRINT @ORDEN
	PRINT @ES_VISIBLE
	PRINT @ES_EDITABLE
	PRINT @ES_OBLIGATORIO
	PRINT @ES_VIGENTE
	PRINT @ES_BORRADO

	INSERT INTO sistema.motivo_accion_componente_formulario 
		(ID_MOTIVO_ACCION, ID_COMPONENTE, ID_FORMULARIO, ID_COMPONENTE_FORMULARIO, ORDEN, ES_VISIBLE, ES_EDITABLE, ES_OBLIGATORIO, ES_VIGENTE, FECHA_CREA, USUARIO_CREA, ES_BORRADO)
	VALUES
		(@ID_MOTIVO_ACCION, @ID_COMPONENTE, @ID_FORMULARIO, @ID_COMPONENTE_FORMULARIO, @ORDEN, @ES_VISIBLE, @ES_EDITABLE, @ES_OBLIGATORIO, @ES_VIGENTE, GETDATE(), '42813053', @ES_BORRADO )

	FETCH NEXT FROM CURSOR_MOTIVO_ACCION_COMPONENTE_FORMULARIO INTO @ID_COMPONENTE, @ID_FORMULARIO, @ID_COMPONENTE_FORMULARIO, @ORDEN, @ES_VISIBLE, @ES_EDITABLE, @ES_OBLIGATORIO, @ES_VIGENTE, @ES_BORRADO
END
CLOSE CURSOR_MOTIVO_ACCION_COMPONENTE_FORMULARIO 
DEALLOCATE CURSOR_MOTIVO_ACCION_COMPONENTE_FORMULARIO 


--Regla de modificatoria 
/*
- SUBSIDIO POR FALLECIMIENTO
- SUBSIDIO POR GASTOS DE SEPELIO O SERVICIO FUNERARIO COMPLETO
*/
	
DECLARE @ID_ACCION_MODIFICATORIA INT
DECLARE @ID_MOTIVO_ACCION INT = 1899
DECLARE @ID_SITUACION_LABORAL INT
DECLARE @ES_VIGENTE INT
DECLARE @ES_BORRADO INT

DECLARE CURSOR_MODIFICATORIA_MOTIVO_ACCION CURSOR 
  LOCAL STATIC READ_ONLY FORWARD_ONLY
FOR 
SELECT 
	ID_ACCION_MODIFICATORIA,
	ID_SITUACION_LABORAL,
	ES_VIGENTE,
	ES_BORRADO
FROM parametrica.modificatoria_motivo_accion (NOLOCK) WHERE ID_MOTIVO_ACCION IN (585)  

OPEN CURSOR_MODIFICATORIA_MOTIVO_ACCION 
FETCH NEXT FROM CURSOR_MODIFICATORIA_MOTIVO_ACCION  INTO @ID_ACCION_MODIFICATORIA, @ID_SITUACION_LABORAL, @ES_VIGENTE, @ES_BORRADO
WHILE @@FETCH_STATUS = 0
BEGIN 
    --Do something with Id here
	PRINT @ID_ACCION_MODIFICATORIA
	PRINT @ID_MOTIVO_ACCION	
	PRINT @ID_SITUACION_LABORAL	
	PRINT @ES_VIGENTE
	PRINT @ES_BORRADO

	INSERT INTO parametrica.modificatoria_motivo_accion
		(ID_ACCION_MODIFICATORIA, ID_MOTIVO_ACCION, ID_SITUACION_LABORAL, ES_VIGENTE, FECHA_CREA, USUARIO_CREA, ES_BORRADO)
	VALUES 
		(@ID_ACCION_MODIFICATORIA, @ID_MOTIVO_ACCION, @ID_SITUACION_LABORAL, @ES_VIGENTE, GETDATE(), '42813053', @ES_BORRADO)

	FETCH NEXT FROM CURSOR_MODIFICATORIA_MOTIVO_ACCION INTO @ID_ACCION_MODIFICATORIA, @ID_SITUACION_LABORAL, @ES_VIGENTE, @ES_BORRADO
END
CLOSE CURSOR_MODIFICATORIA_MOTIVO_ACCION 
DEALLOCATE CURSOR_MODIFICATORIA_MOTIVO_ACCION 

/*
	REGISTRO DE CAMPO POR MOTIVO ACCION
*/
--ids motivo acccion anteriores
--585
--1899

DECLARE @ID_MOTIVO_ACCION INT = 1898
DECLARE @ID_CAMPO INT
DECLARE @ES_VIGENTE INT
DECLARE @ES_BORRADO INT

DECLARE CURSOR_CAMPO_MOTIVO_ACCION CURSOR 
  LOCAL STATIC READ_ONLY FORWARD_ONLY
FOR 
SELECT ID_CAMPO,
	   ES_VIGENTE,
       ES_BORRADO
FROM sistema.campo_motivo_accion (NOLOCK) WHERE ID_MOTIVO_ACCION = 726 AND ES_VIGENTE = 1

OPEN CURSOR_CAMPO_MOTIVO_ACCION 
FETCH NEXT FROM CURSOR_CAMPO_MOTIVO_ACCION  INTO @ID_CAMPO, @ES_VIGENTE, @ES_BORRADO
WHILE @@FETCH_STATUS = 0
BEGIN 
    --Do something with Id here
	PRINT @ID_CAMPO
	PRINT @ID_MOTIVO_ACCION	
	PRINT @ES_VIGENTE
	PRINT @ES_BORRADO

	INSERT INTO sistema.campo_motivo_accion
		(ID_CAMPO, ID_MOTIVO_ACCION, ES_VIGENTE, FECHA_CREACION, USUARIO_CREACION, ES_BORRADO)
	VALUES 
		(@ID_CAMPO, @ID_MOTIVO_ACCION, @ES_VIGENTE, GETDATE(), '42813053', @ES_BORRADO)

	FETCH NEXT FROM CURSOR_CAMPO_MOTIVO_ACCION INTO @ID_CAMPO, @ES_VIGENTE, @ES_BORRADO
END
CLOSE CURSOR_CAMPO_MOTIVO_ACCION 
DEALLOCATE CURSOR_CAMPO_MOTIVO_ACCION 


/*
 se modifico el procedimiento almacenado para el bug de modificatoria de tipo anulacion
*/

USE [EducaRH_Desa]
GO
/****** Object:  StoredProcedure [dbo].[USP_ESCALAFON_INS_MODIFICATORIA_LUTOSEPELIO_SP_IXML]    Script Date: 13/05/2022 17:36:45 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*

EXEC [dbo].[USP_ESCALAFON_INS_MODIFICATORIA_IXML]
'<root>
  <modificatoria ID_ACCION_SERVIDOR_PUBLICO="1010907" ID_TIPO_RESOLUCION="3" NUMERO_RESOLUCION="541332-1032-133123" FECHA_RESOLUCION="2021-07-01T05:00:00Z" FECHA_TERMINO="1900-11-01T00:00:00" ID_MOTIVO_ACCCION="787" CODIGO_MODIFICATORIA="50" OBSERVACION="" NOMBRE_DOCUMENTO="adjunto.pdf" NOMBRE_ARCHIVO="2/983eedd0-feeb-eb11-80d7-005056b68749" FOLIOS_DOCUMENTO="3" />
  <campos>
    <row CodigoCampo="35" Dice="01/01/1900" DebeDecir="05/02/2020" Fecha="2020-02-05T05:00:00Z" IdSelect="0" />
    <row CodigoCampo="36" Dice="516.60" DebeDecir="650.30" IdSelect="0" />
  </campos>
  <usuario>
    <row USUARIO="41299248" NOMBRE_USUARIO="CRISTIAN AREVALO SOLIS" ID_CENTRO_AMBITO="173" ID_TIPO_CENTRO_AMBITO="2" AMBITO="UGEL San Juan de Lurigancho 05" CODIGO_ROL="GSD002" ROL="Técnico de escalafón " FECHA_CREACION="23/07/2021 04:41 p. m." ID_USUARIO="144286" />
  </usuario>
</root>'

*/
ALTER PROCEDURE [dbo].[USP_ESCALAFON_INS_MODIFICATORIA_LUTOSEPELIO_SP_IXML]
	@REQUEST_XML XML
AS
BEGIN

	DECLARE	@ID_LUTOSEPELIO_SERVIDOR_PUBLICO INT,
			@ID_LUTOSEPELIO_SERVIDOR_PUBLICO_NEW INT = 0,
			@ID_TIPO_RESOLUCION INT = 0,					@ID_ACCION_SERVIDOR_PUBLICO INT = 0,
			@ID_PUESTO_SERVIDOR_PUBLICO_NEW INT = 0,
			@ID_ACCION_SERVIDOR_PUBLICO_ESC_NEW INT = 0,	@NUMERO_RESOLUCION VARCHAR(20),
			@FECHA_RESOLUCION DATE,							@OBSERVACION VARCHAR(250),	
			@NOMBRE_DOCUMENTO VARCHAR(250),					@FECHA_HOY DATE = GETDATE(),
			@NOMBRE_ARCHIVO VARCHAR(250),
			@FOLIOS_DOCUMENTO INT,

			@FECHA_ACTUAL DATETIME = GETDATE(),				@ID_ESTADO_APROBADO INT,
			@ID_PUESTO INT,									@CODIGO_PLAZA VARCHAR(20),
			@ID_CARGO INT,									@ID_JORNADA INT,
			@ACTUALIZA_PUESTO BIT = 0,						@ID_PUESTO_NEW INT = 0,
			@ID_CENTRO INT,									@CODIGO_MODULAR_IE VARCHAR(20),
			@CENTRO_LABORAL VARCHAR(250),					@ID_NIVEL_EDUCATIVO INT,
			@ID_MODALIDAD_EDUCATIVA INT,					@CON INT = 1,
			@TOTAL INT = 0,									@ES_VIGENTE BIT = 0,
			@ID_SERVIDOR_PUBLICO INT,						@ID_REGIMEN INT,
			@ID_MOTIVO_ACCION INT,							@ID_ESTADO_MODIFICADO INT,
			@ID_DESPLAZAMIENTO_ORIGEN_NEW INT,				@ID_ASP_MODIFICACION INT,
			@ES_EXTRABAJADOR BIT = 0,						@SITUACION_LABORAL VARCHAR(100),
			@ID_ASP_CONSOLIDADO INT,						@ESTADO_MODIFICADO VARCHAR(20),
			@CODIGO_ESTADO_MODIFICADO INT,
			@FECHA_TERMINO DATETIME,						@CODIGO_MODIFICATORIA INT,
			@ID_MOTIVO_ACCION_MODIFICADA INT,				@APELLIDO_PATERNO VARCHAR(50),
			@APELLIDO_MATERNO VARCHAR(50),					@NOMBRES VARCHAR(50),
			@ID_GRUPO_ACCION AS INT,						@CODIGO_GRUPO_ACCION INT, 
			@MOTIVO_ACCION VARCHAR(100),					@ACCION VARCHAR(100),
			@ID_ASP_CONSOLIDADO_REGISTRO INT,				@ID_ENTIDAD INT,
			@NUEVA_FECHA_INICIO_MODIFICATORIA DATETIME,		@NUEVA_FECHA_FIN_MODIFICATORIA DATETIME,
			@ACCION_MODIFICADA VARCHAR(250),				
			@TIPO_RESOLUCION VARCHAR(250),
			@TIPO_RESOLUCION_ABRE VARCHAR(50),
			@ID_MODIFICATORIA_MOTIVO_ACCION INT,
			@FECHA_MAXIMA DATE,
			@FR_ACTUAL DATE,
			@ID_FSP_SUBSIDIADO_FALLECIDO INT,

			@USUARIO VARCHAR(20),
			@NOMBRE_USUARIO VARCHAR(50),
			@AMBITO VARCHAR(100),
			@ROL VARCHAR(100),


			@Success BIT = 0,
			@Severity INT = 0,
			@Message VARCHAR(MAX) = '',
			@MessageReal VARCHAR(MAX) = ''

	BEGIN TRANSACTION;  
  
	BEGIN TRY

		SELECT	@USUARIO = UPPER(c.value('@USUARIO', 'VARCHAR(20)')),
				@NOMBRE_USUARIO = UPPER(c.value('@NOMBRE_USUARIO', 'VARCHAR(50)')),
				@AMBITO = UPPER(c.value('@AMBITO', 'VARCHAR(100)')),
				@ROL = UPPER(c.value('@ROL', 'VARCHAR(100)'))
		FROM	@REQUEST_XML.nodes('/root/usuario/row') x(c);

		SELECT	@ID_ESTADO_APROBADO = ID_ESTADO_REGISTRO
		FROM	sistema.estado_registro AS ER WITH (NOLOCK)
		WHERE	ER.CODIGO_ESTADO_REGISTRO = 5 --APROBADO

		SELECT	@ID_LUTOSEPELIO_SERVIDOR_PUBLICO = c.value('@ID_ACCION_SERVIDOR_PUBLICO', 'INT'),
				@ID_TIPO_RESOLUCION = c.value('@ID_TIPO_RESOLUCION', 'INT'),
				@NUMERO_RESOLUCION = UPPER(c.value('@NUMERO_RESOLUCION', 'VARCHAR(30)')),
				@FECHA_RESOLUCION = c.value('@FECHA_RESOLUCION', 'DATE'),

				@FECHA_TERMINO = c.value('@FECHA_TERMINO', 'DATETIME'),
				@CODIGO_MODIFICATORIA = c.value('@CODIGO_MODIFICATORIA', 'INT'),
				@ID_MOTIVO_ACCION = c.value('@ID_MOTIVO_ACCCION', 'INT'),
				@ID_MODIFICATORIA_MOTIVO_ACCION = c.value('@ID_MODIFICATORIA_MOTIVO_ACCION', 'INT'),

				@NOMBRE_DOCUMENTO =c.value('@NOMBRE_DOCUMENTO', 'VARCHAR(250)'),
				@NOMBRE_ARCHIVO = c.value('@NOMBRE_ARCHIVO', 'VARCHAR(250)'),
				@FOLIOS_DOCUMENTO = c.value('@FOLIOS_DOCUMENTO', 'INT'),

				@OBSERVACION = UPPER(c.value('@OBSERVACION', 'VARCHAR(250)'))
		FROM	@REQUEST_XML.nodes('/root/modificatoria') x(c);

		IF @FECHA_RESOLUCION > @FECHA_HOY
			BEGIN
				SET @Message = 'La feha de la resolución no puede ser mayor a la fecha actual.';
				RAISERROR(@Message,11,1)
			END

		SELECT	@FECHA_MAXIMA = FECHA_MAXIMA
		FROM	parametrica.modificatoria_motivo_accion AS M WITH (NOLOCK)
		WHERE	M.ID_MODIFICATORIA_MOTIVO_ACCION = @ID_MODIFICATORIA_MOTIVO_ACCION

		IF @FECHA_MAXIMA IS NOT NULL
			BEGIN
				IF @FECHA_RESOLUCION >= @FECHA_MAXIMA
					BEGIN
						RAISERROR('No se encuentra alineado a la ley 27444.',11,1)
					END
			END

		SELECT	@FR_ACTUAL = FECHA_RESOLUCION
		FROM	transaccional.lutosepelio_servidor_publico AS B WITH (NOLOCK)
		WHERE	B.ID_LUTOSEPELIO_SERVIDOR_PUBLICO = @ID_LUTOSEPELIO_SERVIDOR_PUBLICO

		IF @FECHA_RESOLUCION < @FR_ACTUAL
			BEGIN
				SET @Message = 'La feha de la resolución de la modificatoria no puede ser menor a la fecha de la resolución de la acción modificada.';
				RAISERROR(@Message,11,1)
			END

		IF NOT EXISTS(	
					SELECT	ASP.ID_LUTOSEPELIO_SERVIDOR_PUBLICO
					FROM	transaccional.lutosepelio_servidor_publico AS ASP WITH (NOLOCK)
							INNER JOIN sistema.estado_registro AS ER WITH (NOLOCK) ON ASP.ID_ESTADO_REGISTRO = ER.ID_ESTADO_REGISTRO
					WHERE	ASP.ID_LUTOSEPELIO_SERVIDOR_PUBLICO = @ID_LUTOSEPELIO_SERVIDOR_PUBLICO
							AND ER.CODIGO_ESTADO_REGISTRO = 5 --APROBADO
				)
			BEGIN
				SET @Message = 'No se puede registrar la acción, el estado del registro es diferente de APROBADO.';
			END

		SELECT	@ID_ESTADO_MODIFICADO = ID_ESTADO_REGISTRO,
				@ESTADO_MODIFICADO = ER.DESCRIPCION_ESTADO_REGISTRO,
				@CODIGO_ESTADO_MODIFICADO = ER.CODIGO_ESTADO_REGISTRO
		FROM	sistema.estado_registro AS ER WITH (NOLOCK)
		WHERE	ER.CODIGO_ORIGEN = @CODIGO_MODIFICATORIA --MODIFICADO


		IF EXISTS(	SELECT	ASP.ID_LUTOSEPELIO_SERVIDOR_PUBLICO
					FROM	transaccional.lutosepelio_servidor_publico AS ASP WITH (NOLOCK)
							INNER JOIN sistema.estado_registro AS ER WITH (NOLOCK) ON ASP.ID_ESTADO_REGISTRO = ER.ID_ESTADO_REGISTRO
					WHERE	ASP.ID_TIPO_RESOLUCION = @ID_TIPO_RESOLUCION
							AND ASP.NUMERO_RESOLUCION = @NUMERO_RESOLUCION
							AND ER.CODIGO_ESTADO_REGISTRO <> 6
							AND ASP.ID_SERVIDOR_PUBLICO = @ID_SERVIDOR_PUBLICO)
			BEGIN
				SET @Message = 'No se puede registrar la acción, debido a que el tipo y número de resolución ya se encuentra registrado.';
				RAISERROR(@Message,11,1)
			END
		
		IF NOT @CODIGO_MODIFICATORIA IN (49, 771) --DECLARAR NULO, DEJAR SIN EFECTO
			BEGIN
				--CLONANDO LA ACCION A MODIFICAR Y SUS DEPENDENCIAS
				INSERT INTO [transaccional].[lutosepelio_servidor_publico]
				([ID_SERVIDOR_PUBLICO], [ID_TIPO_RESOLUCION], [NUMERO_RESOLUCION], [FECHA_RESOLUCION], [ID_MOTIVO_ACCION],
				[ID_TIPO_PAGO], [ID_TIPO_MONEDA], [MONTO], [ID_TIPO_FALLECIDO], [ID_FSP_SUBSIDIADO_FALLECIDO], [OBSERVACION], [ID_ESTADO_REGISTRO], 
				[NOMBRE_DOCUMENTO], [NOMBRE_ARCHIVO], [FOLIOS_DOCUMENTO], [ES_VIGENTE], [FECHA_CREACION], [USUARIO_CREACION], [ES_BORRADO])
				SELECT
				[ID_SERVIDOR_PUBLICO], @ID_TIPO_RESOLUCION, @NUMERO_RESOLUCION, @FECHA_RESOLUCION, ID_MOTIVO_ACCION, 
				[ID_TIPO_PAGO], [ID_TIPO_MONEDA], [MONTO], ID_TIPO_FALLECIDO, ID_FSP_SUBSIDIADO_FALLECIDO, @OBSERVACION, @ID_ESTADO_APROBADO, 
				@NOMBRE_DOCUMENTO, @NOMBRE_ARCHIVO, @FOLIOS_DOCUMENTO, [ES_VIGENTE], @FECHA_ACTUAL, @USUARIO, 0
				FROM	transaccional.lutosepelio_servidor_publico AS BSP WITH (NOLOCK)
				WHERE	BSP.ID_LUTOSEPELIO_SERVIDOR_PUBLICO = @ID_LUTOSEPELIO_SERVIDOR_PUBLICO
				SET @ID_LUTOSEPELIO_SERVIDOR_PUBLICO_NEW = IDENT_CURRENT('transaccional.lutosepelio_servidor_publico');

				--MODIFICAR EL ESTADO DEL FAMILIAR DEL SERVIDOR PUBLICO CUANDO LA MODIFICATORIA ES DE TIPO "DECLARAR NULO"
				SELECT	@ID_FSP_SUBSIDIADO_FALLECIDO = ID_FSP_SUBSIDIADO_FALLECIDO	
				FROM	transaccional.lutosepelio_servidor_publico AS LS WITH (NOLOCK)	
				WHERE	ID_LUTOSEPELIO_SERVIDOR_PUBLICO = @ID_LUTOSEPELIO_SERVIDOR_PUBLICO

				UPDATE	transaccional.familiares_por_servidor_publico
				SET		CON_SUBSIDIO = 0
				WHERE	ID_FAMILIARES_POR_SERVIDOR_PUBLICO = @ID_FSP_SUBSIDIADO_FALLECIDO
			END		

		UPDATE	transaccional.lutosepelio_servidor_publico
		SET		ID_ESTADO_REGISTRO = @ID_ESTADO_MODIFICADO,
				FECHA_MODIFICACION = @FECHA_ACTUAL,
				USUARIO_MODIFICACION = @USUARIO,
				ES_VIGENTE = 0
		WHERE	ID_LUTOSEPELIO_SERVIDOR_PUBLICO = @ID_LUTOSEPELIO_SERVIDOR_PUBLICO

		UPDATE	transaccional.lutosepelio_servidor_publico_registro
		SET		CODIGO_ESTADO_REGISTRO = @CODIGO_ESTADO_MODIFICADO,
				ESTADO_REGISTRO = @ESTADO_MODIFICADO,
				NOMBRE_USUARIO_MODIFICA = @NOMBRE_USUARIO,
				AMBITO_USUARIO_MODIFICA = @AMBITO,
				ROL_USUARIO_MODIFICA = @ROL
		WHERE	ID_LUTOSEPELIO_SERVIDOR_PUBLICO = @ID_LUTOSEPELIO_SERVIDOR_PUBLICO

		SELECT	@ID_ENTIDAD = E.ID_ENTIDAD
		FROM	maestro.entidad AS E WITH (NOLOCK)
		WHERE	E.CODIGO_ENTIDAD = 47 -- lutosepelio_servidor_publico

		SELECT	@ACCION_MODIFICADA = MA.DESCRIPCION_MOTIVO_ACCION
		FROM	transaccional.lutosepelio_servidor_publico AS B WITH (NOLOCK)
				INNER JOIN sistema.motivo_accion AS MA WITH (NOLOCK)
					ON B.ID_MOTIVO_ACCION = MA.ID_MOTIVO_ACCION
		WHERE	B.ID_LUTOSEPELIO_SERVIDOR_PUBLICO = @ID_LUTOSEPELIO_SERVIDOR_PUBLICO

		SELECT	@TIPO_RESOLUCION = TR.NOMBRE_TIPO_RESOLUCION,
				@TIPO_RESOLUCION_ABRE = TR.ABREVIATURA
		FROM	sistema.tipo_resolucion AS TR WITH (NOLOCK)
		WHERE	TR.ID_TIPO_RESOLUCION = @ID_TIPO_RESOLUCION

		INSERT INTO [transaccional].[accion_por_servidor_publico_modificacion]
		([ID_ACCION_POR_SERVIDOR_PUBLICO], [ID_ACCION_MODIFICADA], [ACCION_MODIFICADA], [TIPO_RESOLUCION_MODIFICADA], [TIPO_RESOLUCION_ABREVIADO_MODIFICADA], 
		[NUMERO_RESOLUCION_MODIFICADA], [FECHA_RESOLUCION_MODIFICADA], [ID_ENTIDAD], [ID_MOTIVO_ACCION_MODIFICATORIA], [ES_VIGENTE],[NOMBRE_DOCUMENTO], 
		[NOMBRE_ARCHIVO], [FOLIOS_DOCUMENTO], [ANOTACIONES])
		VALUES
		(CASE WHEN @CODIGO_MODIFICATORIA IN (49, 771) THEN @ID_LUTOSEPELIO_SERVIDOR_PUBLICO ELSE @ID_LUTOSEPELIO_SERVIDOR_PUBLICO_NEW END, @ID_LUTOSEPELIO_SERVIDOR_PUBLICO,
		@ACCION_MODIFICADA, @TIPO_RESOLUCION, @TIPO_RESOLUCION_ABRE, @NUMERO_RESOLUCION, @FECHA_RESOLUCION, @ID_ENTIDAD, @ID_MOTIVO_ACCION, 1, @NOMBRE_DOCUMENTO, 
		@NOMBRE_ARCHIVO, @FOLIOS_DOCUMENTO, @OBSERVACION)
		--SELECT	@ID_LUTOSEPELIO_SERVIDOR_PUBLICO_NEW, 
		--ID_LUTOSEPELIO_SERVIDOR_PUBLICO, A.DESCRIPCION_ACCION, TR.NOMBRE_TIPO_RESOLUCION, TR.ABREVIATURA,
		--BSP.NUMERO_RESOLUCION, BSP.FECHA_RESOLUCION, @ID_ENTIDAD
		--FROM	transaccional.lutosepelio_servidor_publico AS BSP WITH (NOLOCK)				
		--		INNER JOIN sistema.motivo_accion AS MA WITH (NOLOCK) ON BSP.ID_MOTIVO_ACCION = MA.ID_MOTIVO_ACCION
		--		INNER JOIN sistema.accion AS A WITH (NOLOCK) ON MA.ID_ACCION = A.ID_ACCION
		--		LEFT JOIN sistema.tipo_resolucion AS TR WITH (NOLOCK) ON BSP.ID_TIPO_RESOLUCION = TR.ID_TIPO_RESOLUCION
		--WHERE	BSP.ID_LUTOSEPELIO_SERVIDOR_PUBLICO = @ID_LUTOSEPELIO_SERVIDOR_PUBLICO
		SET @ID_ASP_MODIFICACION = IDENT_CURRENT('transaccional.accion_por_servidor_publico_modificacion');

		IF @CODIGO_MODIFICATORIA = 50 --MODIFICACION/RECTIFICAR
			BEGIN
				--GUARDANDO LAS MODIFICATORIAS
				CREATE TABLE #MODIFICATORIAS
				(	ID INT IDENTITY (1,1),
					ID_ASP_MODIFICACION INT,
					CODIGO_CAMPO INT,
					DICE VARCHAR(250),
					DEBE_DECIR VARCHAR(250),
					ID_DEBE_DECIR INT,
					FECHA DATETIME,
					ACTUALIZADO BIT
				)

				INSERT INTO #MODIFICATORIAS
				SELECT	@ID_ASP_MODIFICACION,
						c.value('@CodigoCampo', 'INT'),
						c.value('@Dice', 'VARCHAR(250)'),
						c.value('@DebeDecir', 'VARCHAR(250)'),
						c.value('@IdSelect', 'INT'),
						c.value('@Fecha', 'DATETIME'),
						0
				FROM	@REQUEST_XML.nodes('/root/campos/row') x(c);
				SET @TOTAL = @@ROWCOUNT

				INSERT INTO [transaccional].[accion_por_servidor_publico_modificacion_detalle]
				([ID_ASP_MODIFICACION], [CODIGO_CAMPO], [DICE], [DEBE_DECIR], [ID_DEBE_DECIR])
				SELECT	ID_ASP_MODIFICACION, CODIGO_CAMPO, DICE, DEBE_DECIR, ID_DEBE_DECIR
				FROM	#MODIFICATORIAS

				--ACTUALIZANDO LOS CAMPOS MODIFICADOS
				WHILE @CON <= @TOTAL
					BEGIN
						DECLARE @ES_GENERICO BIT = 0,
								@CODIGO_CAMPO INT = 0,
								@DEBE_DECIR VARCHAR(250),
								@ID_DEBE_DECIR INT = 0,
								@FECHA DATETIME

						SELECT	@ES_GENERICO = C.ES_GENERICO,
								@CODIGO_CAMPO = C.CODIGO_CAMPO,
								@DEBE_DECIR = M.DEBE_DECIR,
								@ID_DEBE_DECIR = M.ID_DEBE_DECIR,
								@FECHA = FECHA
						FROM	#MODIFICATORIAS AS M
								INNER JOIN sistema.campo AS C WITH (NOLOCK) ON M.CODIGO_CAMPO = C.CODIGO_CAMPO
						WHERE	M.ID = @CON

						IF @ES_GENERICO = 0
							BEGIN
								IF @CODIGO_CAMPO = 36 --ACTUALIZA MONTO
									BEGIN
										UPDATE	transaccional.lutosepelio_servidor_publico
										SET		MONTO = CONVERT(DECIMAL(12,2),@DEBE_DECIR)
										WHERE	ID_LUTOSEPELIO_SERVIDOR_PUBLICO = @ID_LUTOSEPELIO_SERVIDOR_PUBLICO_NEW

										UPDATE	transaccional.lutosepelio_servidor_publico_registro
										SET		MONTO = CONVERT(DECIMAL(12,2),@DEBE_DECIR)
										WHERE	ID_LUTOSEPELIO_SERVIDOR_PUBLICO = @ID_LUTOSEPELIO_SERVIDOR_PUBLICO_NEW
									END
								ELSE IF @CODIGO_CAMPO = 40 --ACTUALIZA TIPO DE MONEDA
									BEGIN
										UPDATE	transaccional.lutosepelio_servidor_publico
										SET		ID_TIPO_MONEDA = @ID_DEBE_DECIR
										WHERE	ID_LUTOSEPELIO_SERVIDOR_PUBLICO = @ID_LUTOSEPELIO_SERVIDOR_PUBLICO_NEW

										UPDATE	transaccional.lutosepelio_servidor_publico_registro
										SET		TIPO_MONEDA = @DEBE_DECIR
										WHERE	ID_LUTOSEPELIO_SERVIDOR_PUBLICO = @ID_LUTOSEPELIO_SERVIDOR_PUBLICO_NEW
									END
								ELSE IF @CODIGO_CAMPO = 41 --ACTUALIZA TIPO DE PAGO
									BEGIN							
										UPDATE	transaccional.lutosepelio_servidor_publico
										SET		ID_TIPO_PAGO = @ID_DEBE_DECIR
										WHERE	ID_LUTOSEPELIO_SERVIDOR_PUBLICO = @ID_LUTOSEPELIO_SERVIDOR_PUBLICO_NEW

										UPDATE	transaccional.lutosepelio_servidor_publico_registro
										SET		TIPO_PAGO = @DEBE_DECIR
										WHERE	ID_LUTOSEPELIO_SERVIDOR_PUBLICO = @ID_LUTOSEPELIO_SERVIDOR_PUBLICO_NEW
									END
								ELSE IF @CODIGO_CAMPO = 42 --DERECHO HABIENTE
									BEGIN							
										UPDATE	transaccional.lutosepelio_servidor_publico
										SET		ID_FSP_SUBSIDIADO_FALLECIDO = @ID_DEBE_DECIR
										WHERE	ID_LUTOSEPELIO_SERVIDOR_PUBLICO = @ID_LUTOSEPELIO_SERVIDOR_PUBLICO_NEW

										UPDATE	transaccional.lutosepelio_servidor_publico_registro
										SET		SUBSIDIADO_FALLECIDO = @DEBE_DECIR
										WHERE	ID_LUTOSEPELIO_SERVIDOR_PUBLICO = @ID_LUTOSEPELIO_SERVIDOR_PUBLICO_NEW
									END
								ELSE IF @CODIGO_CAMPO = 43 --DERECHO HABIENTE
									BEGIN							
										UPDATE	transaccional.lutosepelio_servidor_publico
										SET		ID_TIPO_FALLECIDO = @ID_DEBE_DECIR
										WHERE	ID_LUTOSEPELIO_SERVIDOR_PUBLICO = @ID_LUTOSEPELIO_SERVIDOR_PUBLICO_NEW

										UPDATE	transaccional.lutosepelio_servidor_publico_registro
										SET		TIPO_FALLECIDO = @DEBE_DECIR,
												TITULO_TIPO_FALLECIDO = CASE WHEN @DEBE_DECIR = 'TITULAR' THEN 'Derecho habiente subsidiado' ELSE 'Derecho habiente fallecido' END
										WHERE	ID_LUTOSEPELIO_SERVIDOR_PUBLICO = @ID_LUTOSEPELIO_SERVIDOR_PUBLICO_NEW
									END
							END
						
						SET @CON = @CON + 1
					END
			END

		IF NOT @CODIGO_MODIFICATORIA IN (49, 771) --DECLARAR NULO, DEJAR SIN EFECTO
			BEGIN
				INSERT INTO [transaccional].[lutosepelio_servidor_publico_registro]
				([ID_LUTOSEPELIO_SERVIDOR_PUBLICO], [ID_SERVIDOR_PUBLICO], [TIPO_RESOLUCION], [NUMERO_RESOLUCION], [FECHA_RESOLUCION], 
				[MOTIVO_ACCION], [ACCION], [REGIMEN], [TIPO_PAGO], [FECHA_FALLECIMIENTO], [MONTO], [TIPO_FALLECIDO], [SUBSIDIADO_FALLECIDO], [OBSERVACION], 
				NOMBRE_DOCUMENTO,NOMBRE_ARCHIVO,FOLIOS_DOCUMENTO,
				[TIPO_MONEDA], [ESTADO_REGISTRO], [CODIGO_ESTADO_REGISTRO], [TITULO_TIPO_FALLECIDO], [PARENTESCO],
				[FECHA_CREA], [USUARIO_CREA], [NOMBRE_USUARIO_CREA], [AMBITO_USUARIO_CREA], [ROL_USUARIO_CREA])
				SELECT	B.ID_LUTOSEPELIO_SERVIDOR_PUBLICO, B.ID_SERVIDOR_PUBLICO, TR.NOMBRE_TIPO_RESOLUCION, B.NUMERO_RESOLUCION, B.FECHA_RESOLUCION, 
						MA.DESCRIPCION_MOTIVO_ACCION, A.DESCRIPCION_ACCION, R.DESCRIPCION_REGIMEN,
						TP.DESCRIPCION_TIPO_PAGO,
						CASE WHEN TF.CODIGO_TIPO_FALLECIDO = 1 THEN PSP.FECHA_FALLECIMIENTO_PERSONA ELSE SF.FECHA_FALLECIMIENTO_PERSONA END,
						B.MONTO, TF.DESCRIPCION_TIPO_FALLECIDO,
						SF.PRIMER_APELLIDO_PERSONA + ' ' + ISNULL(SF.SEGUNDO_APELLIDO_PERSONA,'') + ', ' + SF.NOMBRES_PERSONA,
						B.OBSERVACION, B.NOMBRE_DOCUMENTO,B.NOMBRE_ARCHIVO,B.FOLIOS_DOCUMENTO,
						TM.DESCRIPCION_TIPO_MONEDA, 'APROBADO', 5,
						CASE WHEN TF.CODIGO_TIPO_FALLECIDO = 1 THEN 'Derecho habiente subsidiado'
						ELSE 'Derecho habiente fallecido' END, 
						P.DESCRIPCION_PARENTESCO,
						@FECHA, @USUARIO, @NOMBRE_USUARIO, @AMBITO, @ROL
				FROM	[transaccional].[lutosepelio_servidor_publico] AS B WITH (NOLOCK)
						INNER JOIN sistema.tipo_resolucion AS TR WITH (NOLOCK) ON TR.ID_TIPO_RESOLUCION = B.ID_TIPO_RESOLUCION
						INNER JOIN sistema.motivo_accion AS MA WITH (NOLOCK) ON B.ID_MOTIVO_ACCION = MA.ID_MOTIVO_ACCION
						INNER JOIN sistema.accion AS A WITH (NOLOCK) ON MA.ID_ACCION = A.ID_ACCION
						INNER JOIN parametrica.regimen_por_grupo_accion AS RG WITH (NOLOCK) ON A.ID_REGIMEN_POR_GRUPO_ACCION = RG.ID_REGIMEN_POR_GRUPO_ACCION
						INNER JOIN sistema.regimen AS R WITH (NOLOCK) ON RG.ID_REGIMEN = R.ID_REGIMEN
						INNER JOIN sistema.tipo_pago AS TP WITH (NOLOCK) ON TP.ID_TIPO_PAGO = B.ID_TIPO_PAGO
						INNER JOIN sistema.tipo_moneda AS TM WITH (NOLOCK) ON TM.ID_TIPO_MONEDA = B.ID_TIPO_MONEDA
						INNER JOIN sistema.tipo_fallecido AS TF WITH (NOLOCK) ON TF.ID_TIPO_FALLECIDO = B.ID_TIPO_FALLECIDO						
						INNER JOIN maestro.servidor_publico AS SP WITH (NOLOCK) ON B.ID_SERVIDOR_PUBLICO = SP.ID_SERVIDOR_PUBLICO
						INNER JOIN maestro.persona AS PSP WITH (NOLOCK) ON SP.ID_PERSONA = PSP.ID_PERSONA

						LEFT JOIN transaccional.familiares_por_servidor_publico AS FS WITH (NOLOCK) ON FS.ID_FAMILIARES_POR_SERVIDOR_PUBLICO = B.ID_FSP_SUBSIDIADO_FALLECIDO
						LEFT JOIN sistema.parentesco AS P WITH (NOLOCK) ON FS.ID_PARENTESCO = P.ID_PARENTESCO
						LEFT JOIN maestro.persona AS SF WITH (NOLOCK) ON FS.ID_PERSONA = SF.ID_PERSONA

				WHERE	B.ID_LUTOSEPELIO_SERVIDOR_PUBLICO = @ID_LUTOSEPELIO_SERVIDOR_PUBLICO_NEW
			END

		IF @CODIGO_MODIFICATORIA IN (771,49) --DEJAR SIN EFECTO Y DECLARAR NULO
			BEGIN
				DECLARE @ID_ACCION_MODIFICADA INT

				SELECT	@ID_ACCION_MODIFICADA = M.ID_ACCION_MODIFICADA
				FROM	transaccional.accion_por_servidor_publico_modificacion AS M WITH (NOLOCK)
				WHERE	M.ID_ACCION_POR_SERVIDOR_PUBLICO = @ID_LUTOSEPELIO_SERVIDOR_PUBLICO
						AND M.ID_ACCION_MODIFICADA <> M.ID_ACCION_POR_SERVIDOR_PUBLICO --EXCLUYENDO DEJAR SIN EFECTO, DECLARAR NULO
						AND M.ES_VIGENTE = 1
						AND M.ID_ENTIDAD = @ID_ENTIDAD

				IF @@ROWCOUNT > 0 --SE DEJA SIN EFECTO O SE DECLARÓ NULO A UNA MODIFICATORIA
					BEGIN
						UPDATE	transaccional.lutosepelio_servidor_publico
						SET		ID_ESTADO_REGISTRO = 5
						WHERE	ID_LUTOSEPELIO_SERVIDOR_PUBLICO = @ID_ACCION_MODIFICADA

						UPDATE	transaccional.lutosepelio_servidor_publico_registro
						SET		CODIGO_ESTADO_REGISTRO = 5, ESTADO_REGISTRO = 'APROBADO'
						WHERE	ID_LUTOSEPELIO_SERVIDOR_PUBLICO = @ID_ACCION_MODIFICADA

					END

			END

		SET @Success = 1
		SET @Message = 'El registro se guardó satisfactoriamente.'

	END TRY  
	BEGIN CATCH  

		SET @MessageReal = ERROR_MESSAGE()
		SET @Message = @MessageReal
		SET @Severity = ERROR_SEVERITY()

		IF @Severity = 16
			SET @Message = 'Ha ocurrido un error. Contacte con el administrador del sistema.'
  
		IF @@TRANCOUNT > 0  
			ROLLBACK TRANSACTION;  
	END CATCH;  
  
	IF @@TRANCOUNT > 0  
		COMMIT TRANSACTION;

	IF @Severity = 16 AND @Success = 0
		BEGIN
			INSERT INTO [auditoria].[log_error]
			([NOMBRE_SP], [INPUT_PARAMS_XML], [MENSAJE_BD], [MENSAJE_USUARIO], [FECHA_CREACION], [USUARIO_CREACION])
			VALUES
			('USP_ESCALAFON_INS_MODIFICATORIA_LUTOSEPELIO_SP_IXML', @REQUEST_XML, @MessageReal, @Message, @FECHA_ACTUAL, @USUARIO)
		END

	SELECT	@Success AS Success, 
			@Message AS [Message],
			@ID_LUTOSEPELIO_SERVIDOR_PUBLICO_NEW AS [Value]

END
