USE [EducaRH_Desa]
GO
/****** Object:  StoredProcedure [dbo].[USP_ESCALAFON_INS_ACCION_ESCALAFON_IOXML]    Script Date: 17/05/2022 09:55:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*

EXEC [dbo].[USP_ESCALAFON_INS_ACCION_ESCALAFON_IOXML]
'<root>
  <accion ID_SERVIDOR_PUBLICO="172942" ID_TIPO_RESOLUCION="3" NUMERO_RESOLUCION="512354-8888-88888888" FECHA_RESOLUCION="2011-07-07T05:00:00Z" ID_MOTIVO_ACCION="821" ES_HISTORICO="true" CODIGO_PLAZA="541321312345" HORAS_ADICIONALES="0" CODIGO_FORMULARIO="1" ID_CENTRO="29621" USE_ZONA_SUBREGION="" ID_CARGO="1703" OTRO_CARGO="" ID_JORNADA="14" OTRA_JORNADA="0" ID_CATEGORIA_REMUNERATIVA="83" ES_MANDATO_JUDICIAL="false" FECHA_INICIO="2012-05-01T05:00:00Z" FECHA_FIN="1900-01-01T00:00:00" OBSERVACION="" NOMBRE_DOCUMENTO="adjunto.pdf" NOMBRE_ARCHIVO="2/d53731c3-5e54-ec11-80d9-005056b68749" FOLIOS_DOCUMENTO="3" />
  <usuario>
    <row USUARIO="41299248" NOMBRE_USUARIO="CRISTIAN AREVALO SOLIS" ID_CENTRO_AMBITO="267" ID_TIPO_CENTRO_AMBITO="2" AMBITO="DRE Lima Metropolitana" CODIGO_ROL="GSD002" ROL="Técnico de escalafón " FECHA_CREACION="03/12/2021 12:35 p. m." ID_USUARIO="144286" />
  </usuario>
</root>'

EXEC [dbo].[USP_ESCALAFON_INS_ACCION_ESCALAFON_IOXML]
'
<root>
  <accion ID_SERVIDOR_PUBLICO="159385" ID_TIPO_RESOLUCION="3" NUMERO_RESOLUCION="324234-2342-34234" FECHA_RESOLUCION="2022-05-03T05:00:00Z" ID_MOTIVO_ACCION="1900" ES_HISTORICO="true" CODIGO_PLAZA="345345345345" HORAS_ADICIONALES="0" CODIGO_FORMULARIO="1" ID_CENTRO="40945" USE_ZONA_SUBREGION="3" ID_CARGO="315" OTRO_CARGO="" ID_JORNADA="14" OTRA_JORNADA="0" ID_CATEGORIA_REMUNERATIVA="46" ES_MANDATO_JUDICIAL="false" FECHA_INICIO="2022-02-16T05:00:00Z" FECHA_FIN="1900-01-01T00:00:00" OBSERVACION="" NOMBRE_DOCUMENTO="archivoPrueba.pdf" NOMBRE_ARCHIVO="2/dada86f5-19d6-ec11-b81b-0050569005a4" FOLIOS_DOCUMENTO="1" />
  <usuario>
    <row USUARIO="42813053" NOMBRE_USUARIO="CHRISTIAN ABELARDO SCHEREIBER CORNELIO" ID_CENTRO_AMBITO="173" ID_TIPO_CENTRO_AMBITO="2" AMBITO="UGEL San Juan de Lurigancho 05" CODIGO_ROL="GSD002" ROL="Técnico de escalafón " FECHA_CREACION="17/05/2022 02:46 p. m." ID_USUARIO="80874" />
  </usuario>
</root>
'

*/
ALTER PROCEDURE [dbo].[USP_ESCALAFON_INS_ACCION_ESCALAFON_IOXML]
	@REQUEST_XML XML
AS
BEGIN

	DECLARE	@ID_ACCION_XSP INT = 0,							@ID_CENTRO INT,
			@CODIGO_MODULAR VARCHAR(7),						@NOMBRE_CENTRO VARCHAR(250),
			@ID_DRE INT,									@ID_UGEL INT,
			@ID_NIVEL_EDUCATIVO INT,						@ID_MOTIVO_ACCION INT,
			@ID_CARGO INT,									@ID_JORNADA INT,
			@ID_ESTADO_REGISTRO INT,						@FECHA_ACTUAL DATETIME = GETDATE(),				
			@ID_SERVIDOR_PUBLICO INT,						@ID_PUESTO INT = 0,
			@USUARIO VARCHAR(20),							@ID_SITUACION_LABORAL INT,
			@ID_CONDICION_LABORAL INT,						@ID_CATEGORIA_REMUNERATIVA INT,
			@ID_REGIMEN INT,								@FECHA_INICIO DATE,
			@ULT_FECHA_INICIO DATETIME = '01-01-1900',		@CODIGO_PLAZA VARCHAR(20),
			--@CODIGO_GRUPO_ACCION INT,						
			@ES_HISTORICO BIT = 0,
			@ID_CENTRO_NEW INT = 0,							@ES_VIGENTE BIT,
			@REGION VARCHAR(100) = '',						@ID_TIPO_CENTRO_USER INT,
			@xml_acciones XML,								@ID_CENTRO_USER INT,
			@ES_USE_ZONA_SUBREGION BIT = 0,					@USE_ZONA_SUBREGION VARCHAR(250),
			@ID_TIPO_CENTRO INT,							@FECHA_FIN DATE,
			@ID_REGIMEN_SERVIDOR INT,						@AMBITO VARCHAR(100),
			@ROL VARCHAR(100),								@NOMBRE_USUARIO VARCHAR(50),
			@ES_EXTRABAJADOR BIT = 0,						@SITUACION_LABORAL VARCHAR(100),
			@ID_ASP_CONSOLIDADO INT,						@NUMERO_RESOLUCION VARCHAR(50),
			@ID_TIPO_RESOLUCION INT,						@CODIGO_JORNADA INT,
			@DESCRIPCION_JORNADA VARCHAR(100),				@OTRA_JORNADA INT,
			@FECHA_RESOLUCION DATETIME,						@ANIO_MINIMO INT,
			@FECHA_NACIMIENTO_PERSONA DATETIME,				@CODIGO_FORMULARIO INT,
			@ACCION_REEMPLAZO BIT = 0,						@HORAS_ADICIONALES INT,
			@CODIGO_MOTIVO_ACCION INT,						@FECHA_HOY DATE = GETDATE(),
			@AFECTA_SITUACION_LABORAL BIT = 0,				@CODIGO_TIPO_CENTRO INT = 0,
			@ID_MODALIDAD_EDUCATIVA INT,					@MODALIDAD_EDUCATIVA VARCHAR(100),
			@NIVEL_EDUCATIVA VARCHAR(100),					@CODIGO_REGIMEN INT,
			@NUMERO_DI_SP VARCHAR(12),						@ID_CENTRO_UGEL INT,
			@TOTAL INT,										@ID_COND_LAB_ACT INT,			
			@ID_SITUACION_LABORAL_ACTUAL INT,				@FIV_REGIMEN DATE,
			@CODIGO_REGIMEN_ACTUAL INT,						@TOTAL_NOMB INT = 0,
			@FECHA_FUTURO DATETIME,							@ID_REGIMEN_ACTUAL INT,

			@TOTAL_NOMBRAMIENTO_REGISTRADOS INT,
			@TOTAL_CESE_REGISTRADO INT,
			@CANT_NOMBRAMIENTO_REGISTRADOS_POR_MOTIVO_ACCION INT,
			@ID_MOTIVO_ACCION_REG INT,

			@Success BIT = 0,
			@Severity INT = 0,
			@Message VARCHAR(MAX) = '',
			@MessageReal VARCHAR(MAX) = ''

	BEGIN TRANSACTION;  
  
	BEGIN TRY

		SET @FECHA_FUTURO = DATEADD(YEAR,100,@FECHA_ACTUAL)

		SELECT	@USUARIO = UPPER(c.value('@USUARIO', 'VARCHAR(20)')),
				@NOMBRE_USUARIO = UPPER(c.value('@NOMBRE_USUARIO', 'VARCHAR(50)')),
				@AMBITO = UPPER(c.value('@AMBITO', 'VARCHAR(100)')),
				@ROL = UPPER(c.value('@ROL', 'VARCHAR(100)')),
				@ID_CENTRO_USER = c.value('@ID_CENTRO_USUARIO', 'INT'),
				@ID_TIPO_CENTRO_USER = c.value('@ID_TIPO_CENTRO_USUARIO', 'INT')
		FROM	@REQUEST_XML.nodes('/root/usuario/row') x(c);

		SELECT	@ID_ESTADO_REGISTRO = ER.ID_ESTADO_REGISTRO
		FROM	sistema.estado_registro AS ER WITH (NOLOCK)
		WHERE	ER.CODIGO_ESTADO_REGISTRO = 5 --APROBADO

		SELECT	@ID_SERVIDOR_PUBLICO = c.value('@ID_SERVIDOR_PUBLICO', 'INT'),
				@ES_HISTORICO = c.value('@ES_HISTORICO', 'BIT'),
				@CODIGO_PLAZA = UPPER(c.value('@CODIGO_PLAZA', 'VARCHAR(20)')),
				@ID_CENTRO = c.value('@ID_CENTRO', 'INT'),
				@CODIGO_FORMULARIO = c.value('@CODIGO_FORMULARIO', 'INT'),
				@ID_CARGO = c.value('@ID_CARGO', 'INT'),
				@ID_JORNADA = c.value('@ID_JORNADA', 'INT'),
				@OTRA_JORNADA = c.value('@OTRA_JORNADA', 'INT'),
				@ID_CATEGORIA_REMUNERATIVA = c.value('@ID_CATEGORIA_REMUNERATIVA', 'INT'),
				@ID_MOTIVO_ACCION = c.value('@ID_MOTIVO_ACCION', 'INT'),
				@FECHA_INICIO = c.value('@FECHA_INICIO', 'DATE'),
				@FECHA_FIN = c.value('@FECHA_FIN', 'DATE'),
				@USE_ZONA_SUBREGION = UPPER(NULLIF(c.value('@USE_ZONA_SUBREGION', 'VARCHAR(250)'),'')),
				@ID_TIPO_RESOLUCION = c.value('@ID_TIPO_RESOLUCION', 'INT'),
				@NUMERO_RESOLUCION = UPPER(c.value('@NUMERO_RESOLUCION', 'VARCHAR(50)')),
				@FECHA_RESOLUCION = c.value('@FECHA_RESOLUCION', 'DATETIME'),
				@HORAS_ADICIONALES = NULLIF(c.value('@HORAS_ADICIONALES', 'INT'),0)
		FROM	@REQUEST_XML.nodes('/root/accion') x(c);


		--SELECT	@ID_SITUACION_LABORAL_ACTUAL = ID_SITUACION_LABORAL
		--FROM	transaccional.accion_por_servidor_publico_registro AS ASPR WITH (NOLOCK)
		--WHERE	ASPR.ID_SERVIDOR_PUBLICO = @ID_SERVIDOR_PUBLICO

		IF NOT EXISTS(SELECT	TG.ID_TIPO_RESOLUCION_GRUPO_ACCION
					  FROM		sistema.tipo_resolucion_grupo_accion AS TG WITH (NOLOCK)
								INNER JOIN sistema.grupo_accion AS GA WITH (NOLOCK) ON TG.ID_GRUPO_ACCION = GA.ID_GRUPO_ACCION
					  WHERE		TG.ES_VIGENTE = 1
								AND TG.ID_TIPO_RESOLUCION = @ID_TIPO_RESOLUCION
								AND GA.CODIGO_GRUPO_ACCION = 1 --VINCULACION
					)
					BEGIN
						SET @Message = 'El tipo de resolución seleccionado no es válido.';
						RAISERROR(@Message,11,1)
					END
		

		SELECT	@CODIGO_REGIMEN_ACTUAL = R.CODIGO_REGIMEN,
				@ID_REGIMEN_ACTUAL = R.ID_REGIMEN
		FROM	maestro.servidor_publico AS SP WITH (NOLOCK)
				INNER JOIN sistema.regimen AS R WITH (NOLOCK)
					ON SP.ID_REGIMEN = R.ID_REGIMEN
		WHERE	SP.ID_SERVIDOR_PUBLICO = @ID_SERVIDOR_PUBLICO

		--select * from sistema.motivo_accion WHERE ID_MOTIVO_ACCION IN (821,829)

		IF @CODIGO_REGIMEN_ACTUAL = 2 --REGIMEN 30512
			BEGIN
				
				SELECT	@TOTAL_NOMB = COUNT(ASP.ID_ACCION_POR_SERVIDOR_PUBLICO)
				FROM	transaccional.accion_por_servidor_publico  AS ASP WITH (NOLOCK)
						INNER JOIN sistema.estado_registro AS ER WITH (NOLOCK)
							ON ASP.ID_ESTADO_REGISTRO = ER.ID_ESTADO_REGISTRO
				WHERE	ASP.ID_SERVIDOR_PUBLICO = @ID_SERVIDOR_PUBLICO
						AND NOT ER.CODIGO_ESTADO_REGISTRO IN (6,9) --ANULADO, MODIFICADO
						AND ASP.ID_MOTIVO_ACCION IN 
						(
							SELECT	ID_REGISTRO_ENTIDAD
							FROM	sistema.entidad_regla AS ER WITH (NOLOCK)
									INNER JOIN sistema.regla AS R WITH (NOLOCK)
										ON ER.ID_REGLA = R.ID_REGLA
							WHERE	R.CODIGO_REGLA = 64 --NOMBRAMIENTOS PARA EL REGIMEN 30512
						)
				
				IF @TOTAL_NOMB > 3 
					BEGIN
						SET @Message = 'Solo se permite como máximo 4 acciones de nombramiento para el Régimen 30512.';
						RAISERROR(@Message,11,1)
					END
				ELSE IF @TOTAL_NOMB = 3
					BEGIN
						DECLARE @CTD INT = 0

						IF EXISTS(
							SELECT	ASP.ID_ACCION_POR_SERVIDOR_PUBLICO
							FROM	transaccional.accion_por_servidor_publico  AS ASP WITH (NOLOCK)
									INNER JOIN transaccional.puesto_por_accion_servidor_publico AS PASP WITH (NOLOCK)
										ON ASP.ID_ACCION_POR_SERVIDOR_PUBLICO = PASP.ID_ACCION_POR_SERVIDOR_PUBLICO
									INNER JOIN maestro.puesto AS P WITH (NOLOCK)
										ON PASP.ID_PUESTO = P.ID_PUESTO
									INNER JOIN maestro.centro AS C WITH (NOLOCK)
										ON P.ID_CENTRO = C.ID_CENTRO
									INNER JOIN sistema.nivel_educativo AS NE WITH (NOLOCK)
										ON C.ID_NIVEL_EDUCATIVO = NE.ID_NIVEL_EDUCATIVO
									INNER JOIN sistema.modalidad_educativa AS ME WITH (NOLOCK)
										ON NE.ID_MODALIDAD_EDUCATIVA = ME.ID_MODALIDAD_EDUCATIVA
									INNER JOIN sistema.estado_registro AS ER WITH (NOLOCK)
										ON ASP.ID_ESTADO_REGISTRO = ER.ID_ESTADO_REGISTRO
							WHERE	ASP.ID_SERVIDOR_PUBLICO = @ID_SERVIDOR_PUBLICO
									AND NOT ER.CODIGO_ESTADO_REGISTRO IN (6,9) --ANULADO, MODIFICADO
									AND ASP.ID_MOTIVO_ACCION IN 
									(
										SELECT	ID_REGISTRO_ENTIDAD
										FROM	sistema.entidad_regla AS ER WITH (NOLOCK)
												INNER JOIN sistema.regla AS R WITH (NOLOCK)
													ON ER.ID_REGLA = R.ID_REGLA
										WHERE	R.CODIGO_REGLA = 64 --NOMBRAMIENTOS PARA EL REGIMEN 30512
									)
									AND ME.CODIGO_MODALIDAD_EDUCATIVA = 6 --EDUCACIÓN SUPERIOR
							)
							BEGIN
								SET @CTD = 1							
							END
						ELSE IF EXISTS(	SELECT	C.ID_CENTRO
										FROM	maestro.centro AS C WITH (NOLOCK)
												INNER JOIN sistema.nivel_educativo AS NE WITH (NOLOCK)
													ON C.ID_NIVEL_EDUCATIVO = NE.ID_NIVEL_EDUCATIVO
												INNER JOIN sistema.modalidad_educativa AS ME WITH (NOLOCK)
													ON NE.ID_MODALIDAD_EDUCATIVA = ME.ID_MODALIDAD_EDUCATIVA
										WHERE	C.ID_CENTRO = @ID_CENTRO
												AND ME.CODIGO_MODALIDAD_EDUCATIVA = 6 --EDUCACIÓN SUPERIOR
									)
							BEGIN
								SET @CTD = 1
							END

						IF @CTD = 0
						BEGIN
							SET @Message = 'Para registrar el 4to nombramiento debe de contar con al menos un nombramiento en modalidad superior.';
							RAISERROR(@Message,11,1)
						END
					END

				--VALIDANDO CRUZE CON PERMUTA O REASIGNACION
				IF EXISTS( --VERIFICANDO QUE EL MOTIVO ACCION ES UN NOMBRAMIENTO DE LA 30512
					SELECT	ID_REGISTRO_ENTIDAD
					FROM	sistema.entidad_regla AS ER WITH (NOLOCK)
							INNER JOIN sistema.regla AS R WITH (NOLOCK)
								ON ER.ID_REGLA = R.ID_REGLA
					WHERE	R.CODIGO_REGLA = 64 --NOMBRAMIENTOS PARA EL REGIMEN 30512				
							AND ER.ID_REGISTRO_ENTIDAD = @ID_MOTIVO_ACCION 
				)
				BEGIN
					IF EXISTS(
						SELECT	ASP.ID_ACCION_POR_SERVIDOR_PUBLICO
						FROM	transaccional.accion_por_servidor_publico AS ASP WITH (NOLOCK)
								INNER JOIN sistema.estado_registro AS ER WITH (NOLOCK)
								ON ASP.ID_ESTADO_REGISTRO = ER.ID_ESTADO_REGISTRO
						WHERE	ASP.ID_SERVIDOR_PUBLICO = @ID_SERVIDOR_PUBLICO
								AND NOT ER.CODIGO_ESTADO_REGISTRO IN (6,9) --ANULADO, MODIFICADO
								AND ASP.ID_MOTIVO_ACCION IN 
								(
									SELECT	ID_REGISTRO_ENTIDAD
									FROM	sistema.entidad_regla AS ER WITH (NOLOCK)
											INNER JOIN sistema.regla AS R WITH (NOLOCK)
												ON ER.ID_REGLA = R.ID_REGLA
									WHERE	R.CODIGO_REGLA = 66 --MOTIVOS DE ACCIÓN DE REASIGNACION Y PERMUTA DEL REGIMEN 30512
								)
								AND @FECHA_INICIO BETWEEN ASP.FECHA_INICIO_ACCION_POR_SERVIDOR_PUBLICO AND ISNULL(ASP.FECHA_FIN_ACCION_POR_SERVIDOR_PUBLICO, @FECHA_FUTURO)
						)
						BEGIN
							SET @Message = 'El inicio del nombramiento esta dentro del rango de una reasignación o permuta, corrija estas acciones para poder registrarlo.';
							RAISERROR(@Message,11,1)
						END

				END
			END

		IF EXISTS(	SELECT	ID_ENTIDAD_REGLA
					FROM	sistema.entidad_regla AS ER WITH (NOLOCK)
							INNER JOIN sistema.regla AS R WITH (NOLOCK) ON ER.ID_REGLA = R.ID_REGLA
					WHERE	ER.ES_VIGENTE = 1
							AND ER.ID_REGISTRO_ENTIDAD = @ID_MOTIVO_ACCION
							AND R.CODIGO_REGLA = 37 --MOTIVOS DE ACCION DE REEMPLAZO, UNICAS POR SERVIDOR PUBLICO
				 )
				 AND @CODIGO_REGIMEN_ACTUAL <> 2 --EXLCUYENDO REGIMEN 30512
				BEGIN
					SET @ACCION_REEMPLAZO = 1
				END

		IF @ACCION_REEMPLAZO = 0
			BEGIN
				IF EXISTS(	SELECT	ASP.ID_ACCION_POR_SERVIDOR_PUBLICO
							FROM	transaccional.accion_por_servidor_publico AS ASP WITH (NOLOCK)
									INNER JOIN sistema.estado_registro AS ER WITH (NOLOCK) ON ASP.ID_ESTADO_REGISTRO = ER.ID_ESTADO_REGISTRO
							WHERE	ASP.ID_TIPO_RESOLUCION = @ID_TIPO_RESOLUCION
									AND ASP.NUMERO_RESOLUCION = @NUMERO_RESOLUCION							
									AND YEAR(ASP.FECHA_RESOLUCION) = YEAR(@FECHA_RESOLUCION)
									AND ER.CODIGO_ESTADO_REGISTRO <> 6
									AND ASP.ID_SERVIDOR_PUBLICO = @ID_SERVIDOR_PUBLICO
						)
					BEGIN
						SET @Message = 'No se puede registrar la acción, debido a que el tipo, número y año de resolución ya se encuentra registrado.';
						RAISERROR(@Message,11,1)
					END
			END

		SELECT	@FIV_REGIMEN = R.FECHA_INICIO_VIGENCIA
		FROM	sistema.regimen AS R WITH (NOLOCK)
		WHERE	R.ID_REGIMEN = @ID_REGIMEN

		IF @FECHA_INICIO < @FIV_REGIMEN
			BEGIN
				SET @Message = 'La fecha de inicio de la acción no es válida.';
				RAISERROR(@Message,11,1)
			END
		--SET @ANIO_MINIMO = YEAR(@FECHA_RESOLUCION) - 1
		--IF YEAR(@FECHA_INICIO) < @ANIO_MINIMO
		--	BEGIN
		--		SET @Message = 'La fecha de inicio de la acción no es válida, esta debe de ser mayor o igual a 01/01/' + convert(varchar,@ANIO_MINIMO);
		--		RAISERROR(@Message,11,1)
		--	END

		SELECT	@FECHA_NACIMIENTO_PERSONA = P.FECHA_NACIMIENTO_PERSONA,
				@NUMERO_DI_SP = P.NUMERO_DOCUMENTO_IDENTIDAD_PERSONA
		FROM	maestro.servidor_publico AS SP WITH (NOLOCK)
				INNER JOIN maestro.persona AS P WITH (NOLOCK) ON SP.ID_PERSONA = P.ID_PERSONA
		WHERE	SP.ID_SERVIDOR_PUBLICO = @ID_SERVIDOR_PUBLICO
		IF @FECHA_NACIMIENTO_PERSONA IS NOT NULL
			BEGIN
				SET @FECHA_NACIMIENTO_PERSONA = DATEADD(YEAR, 18, @FECHA_NACIMIENTO_PERSONA)
				IF @FECHA_RESOLUCION < @FECHA_NACIMIENTO_PERSONA
				BEGIN
					SET @Message = 'La fecha de la resolución no es válida. El servidor público en dicha fecha es menor a 18 años.';
					RAISERROR(@Message,11,1)
				END
			END

		SELECT	C.CODIGO_COMPONENTE--, C.NOMBRE_COMPONENTE
		INTO	#CONFIGURACION
		FROM	sistema.motivo_accion_componente_formulario AS MC WITH (NOLOCK)
				INNER JOIN sistema.componente_formulario AS CF WITH (NOLOCK) 
					ON MC.ID_COMPONENTE_FORMULARIO = CF.ID_COMPONENTE_FORMULARIO
				INNER JOIN sistema.componente AS C WITH (NOLOCK) ON CF.ID_COMPONENTE = C.ID_COMPONENTE
				INNER JOIN sistema.formulario AS F WITH (NOLOCK) ON CF.ID_FORMULARIO = F.ID_FORMULARIO
		WHERE	MC.ID_MOTIVO_ACCION = @ID_MOTIVO_ACCION
				AND F.CODIGO_FORMULARIO = @CODIGO_FORMULARIO
				AND CF.ES_BORRADO = 0
				AND MC.ES_BORRADO = 0
				AND MC.ES_VIGENTE = 1 AND MC.ES_OBLIGATORIO = 1

		SELECT	@ID_REGIMEN = RG.ID_REGIMEN,
				@CODIGO_REGIMEN = R.CODIGO_REGIMEN,
				@CODIGO_MOTIVO_ACCION = MA.CODIGO_MOTIVO_ACCION
		FROM	sistema.motivo_accion AS MA WITH (NOLOCK)
				INNER JOIN sistema.accion AS A WITH (NOLOCK) ON MA.ID_ACCION = A.ID_ACCION
				INNER JOIN parametrica.regimen_por_grupo_accion AS RG WITH (NOLOCK) ON A.ID_REGIMEN_POR_GRUPO_ACCION = RG.ID_REGIMEN_POR_GRUPO_ACCION
				INNER JOIN sistema.regimen AS R WITH (NOLOCK) ON RG.ID_REGIMEN = R.ID_REGIMEN
		WHERE	ID_MOTIVO_ACCION = @ID_MOTIVO_ACCION


		SELECT	@ID_NIVEL_EDUCATIVO = C.ID_NIVEL_EDUCATIVO,
				@NIVEL_EDUCATIVA = NE.DESCRIPCION_NIVEL_EDUCATIVO,
				@ID_MODALIDAD_EDUCATIVA = NE.ID_MODALIDAD_EDUCATIVA,
				@MODALIDAD_EDUCATIVA = ME.DESCRIPCION_MODALIDAD_EDUCATIVA,
				@CODIGO_TIPO_CENTRO = TC.CODIGO_TIPO_CENTRO,
				@ID_CENTRO_UGEL = C.ID_CENTRO_UGEL
		FROM	maestro.centro AS C WITH (NOLOCK)
				INNER JOIN sistema.tipo_centro AS TC WITH (NOLOCK) ON C.ID_TIPO_CENTRO = TC.ID_TIPO_CENTRO
				INNER JOIN sistema.nivel_educativo AS NE WITH (NOLOCK) ON C.ID_NIVEL_EDUCATIVO = NE.ID_NIVEL_EDUCATIVO
				INNER JOIN sistema.modalidad_educativa AS ME WITH (NOLOCK) ON NE.ID_MODALIDAD_EDUCATIVA = ME.ID_MODALIDAD_EDUCATIVA
		WHERE	C.ID_CENTRO = @ID_CENTRO

		IF @CODIGO_TIPO_CENTRO <> 3
			BEGIN
				RAISERROR('El centro laboral seleccionado no es válido.',11,1)
			END

		IF YEAR(@FECHA_INICIO) = 1900
			AND EXISTS (SELECT CODIGO_COMPONENTE FROM #CONFIGURACION WHERE CODIGO_COMPONENTE IN (16,23))
			BEGIN
				RAISERROR('La fecha de inicio es obligatoria o no es válida.',11,1)
			END

		IF YEAR(@FECHA_FIN) = 1900
			AND EXISTS (SELECT CODIGO_COMPONENTE FROM #CONFIGURACION WHERE CODIGO_COMPONENTE IN (20,23))
			BEGIN
				RAISERROR('La fecha de fin es obligatoria o no es válida.',11,1)
			END

		IF LEN(RTRIM(LTRIM(@NUMERO_RESOLUCION))) = 0
			BEGIN
				RAISERROR('El número de resolución es obligatorio.',11,1)
			END

		--Validando cargo
		IF EXISTS (SELECT CODIGO_COMPONENTE FROM #CONFIGURACION WHERE CODIGO_COMPONENTE = 13)
			BEGIN
				IF NOT EXISTS(
						SELECT	C.ID_CARGO
						FROM	sistema.cargo AS C WITH (NOLOCK)
								INNER JOIN sistema.subtipo_trabajador AS ST WITH (NOLOCK) ON ST.ID_SUBTIPO_TRABAJADOR = C.ID_SUBTIPO_TRABAJADOR
								INNER JOIN sistema.area_servidor AS A WITH (NOLOCK) ON ST.ID_AREA_SERVIDOR = A.ID_AREA_SERVIDOR
						WHERE	C.ES_VIGENTE = 1 AND C.ES_BORRADO = 0
								AND A.ID_REGIMEN = @ID_REGIMEN
								AND C.ID_CARGO = @ID_CARGO
								AND C.INGRESO_MANUAL = 0
						UNION ALL
						SELECT	C.ID_CARGO
						FROM	sistema.cargo AS C WITH (NOLOCK)
						WHERE	INGRESO_MANUAL = 1 AND C.ID_CARGO = @ID_CARGO
						)
					BEGIN
						RAISERROR('El cargo seleccionado no es válido.',11,1)
					END
			END

		--Validando jornada
		IF EXISTS (SELECT CODIGO_COMPONENTE FROM #CONFIGURACION WHERE CODIGO_COMPONENTE = 14)
			BEGIN
				IF NOT EXISTS(
							SELECT	CJ.ID_JORNADA
							FROM	sistema.cargo_por_jornada AS CJ WITH (NOLOCK)
									INNER JOIN sistema.cargo AS C WITH (NOLOCK) ON CJ.ID_CARGO = C.ID_CARGO
									INNER JOIN sistema.subtipo_trabajador AS ST WITH (NOLOCK) ON ST.ID_SUBTIPO_TRABAJADOR = C.ID_SUBTIPO_TRABAJADOR
									INNER JOIN sistema.area_servidor AS A WITH (NOLOCK) ON ST.ID_AREA_SERVIDOR = A.ID_AREA_SERVIDOR
									INNER JOIN sistema.jornada AS J WITH (NOLOCK) ON CJ.ID_JORNADA = J.ID_JORNADA
							WHERE	CJ.ES_VIGENTE = 1 AND CJ.ES_BORRADO = 0
									AND J.ES_VIGENTE = 1
									AND CJ.ID_CARGO = @ID_CARGO
									AND CJ.ID_JORNADA = @ID_JORNADA
									AND A.ID_REGIMEN = @ID_REGIMEN
							UNION ALL
							SELECT	C.ID_JORNADA
							FROM	sistema.jornada AS C WITH (NOLOCK)
							WHERE	INGRESO_MANUAL = 1 AND C.ID_JORNADA = @ID_JORNADA
						)
					BEGIN
						RAISERROR('La jornada seleccionada no es válida.',11,1)
					END
			END

		--Validando la categoria remmunerativa
		IF EXISTS (SELECT CODIGO_COMPONENTE FROM #CONFIGURACION WHERE CODIGO_COMPONENTE = 9)
			BEGIN
				IF NOT EXISTS(
					SELECT	CR.ID_CATEGORIA_REMUNERATIVA
					FROM	sistema.categoria_remunerativa AS CR WITH (NOLOCK)
					WHERE	CR.ID_REGIMEN = @ID_REGIMEN
							AND CR.ES_VIGENTE = 1 AND CR.ES_BORRADO = 0
							AND CR.ID_CATEGORIA_REMUNERATIVA = @ID_CATEGORIA_REMUNERATIVA			
				)
				BEGIN
					RAISERROR('La escala / categoría / nivel / grupo no es válido.',11,1)
				END
			END

		IF YEAR(@FECHA_FIN) = 1900
			SET @FECHA_FIN = NULL

		IF (@FECHA_HOY <= @FECHA_INICIO OR @FECHA_FIN >= @FECHA_HOY) AND @CODIGO_FORMULARIO = 1
			BEGIN				
				SET @Message = 'Solo se permite registrar acciones de vinculación históricas.';
				RAISERROR(@Message,11,1)
			END

		SELECT	@ID_REGIMEN_SERVIDOR = ID_REGIMEN,
				@ES_EXTRABAJADOR = ISNULL(S.ES_EXTRABAJADOR,0)
		FROM	maestro.servidor_publico AS S WITH (NOLOCK)
		WHERE	ID_SERVIDOR_PUBLICO = @ID_SERVIDOR_PUBLICO		

		--CORRIGIENDO ERROR DE PLATAFORMA
		UPDATE	maestro.servidor_publico
		SET		CODIGO_SERVIDOR_PUBLICO = @ID_SERVIDOR_PUBLICO
		WHERE	ID_SERVIDOR_PUBLICO = @ID_SERVIDOR_PUBLICO

		--LEY 30328 - CONTRATO DE SERVICIO DOCENTE y FORM. APERTURA_LEGAJO
		IF @CODIGO_REGIMEN = 3 AND @CODIGO_FORMULARIO = 2
			BEGIN				
				EXEC [dbo].[USP_ESCALAFON_INS_SINCRONIZAR_LEGAJOS] @NUMERO_DI_SP, @ID_CENTRO_UGEL, @ID_SERVIDOR_PUBLICO OUTPUT
			END

		SET @USE_ZONA_SUBREGION = '-'
			SET @USE_ZONA_SUBREGION = ''

		IF LEN(ISNULL(@USE_ZONA_SUBREGION,'')) > 0
			SET @ES_USE_ZONA_SUBREGION = 1

		SELECT	@ID_TIPO_CENTRO = TC.ID_TIPO_CENTRO
		FROM	sistema.tipo_centro AS TC WITH (NOLOCK)
		WHERE	TC.CODIGO_TIPO_CENTRO = CASE WHEN @ES_USE_ZONA_SUBREGION = 1 THEN 14 ELSE 3 END


		SELECT	@CODIGO_JORNADA = J.CODIGO_JORNADA,
				@DESCRIPCION_JORNADA = J.DESCRIPCION_JORNADA
		FROM	sistema.jornada AS J WITH (NOLOCK)
		WHERE	J.ID_JORNADA = @ID_JORNADA

		IF @CODIGO_JORNADA = 999 --OTRA JORNADA
			BEGIN
				SELECT TOP 1 @ID_JORNADA = ID_JORNADA,
						@DESCRIPCION_JORNADA = DESCRIPCION_JORNADA
				FROM	sistema.jornada AS J WITH (NOLOCK)
				WHERE	CANTIDAD_JORNADA = @OTRA_JORNADA AND ES_VIGENTE = 1
						AND ID_TIPO_JORNADA = 3
				IF @@ROWCOUNT = 0
					BEGIN
						SET @DESCRIPCION_JORNADA = CONVERT(VARCHAR(5), @OTRA_JORNADA) + ' HORAS'

						INSERT INTO sistema.jornada
						([ID_TIPO_JORNADA], [CODIGO_JORNADA], [CODIGO_ORIGEN], [DESCRIPCION_JORNADA], [ORDEN], [CANTIDAD_JORNADA],
						[INGRESO_MANUAL], [ES_VIGENTE], [FECHA_INICIO_VIGENCIA], [FECHA_CREACION], [USUARIO_CREACION],[ES_BORRADO])
						VALUES(3,0,0,@DESCRIPCION_JORNADA, @OTRA_JORNADA, @OTRA_JORNADA, 
						0, 1, @FECHA_ACTUAL, @FECHA_ACTUAL, @USUARIO, 0)
						SET @ID_JORNADA = IDENT_CURRENT('sistema.jornada');
					END
			END

		--DETERMINANDO SI EL MOTIVO ACCION AFECTA LA SITUACION LABORAL
		SET @ES_VIGENTE = 0
		SELECT	@ES_VIGENTE = ISNULL(AFECTA_SITUACION_LABORAL,0)
		FROM	sistema.situacion_laboral_motivo_accion AS SLMA WITH (NOLOCK)
		WHERE	ID_MOTIVO_ACCION = @ID_MOTIVO_ACCION
				AND SLMA.ES_VIGENTE = 1

		IF @FECHA_INICIO > @FECHA_HOY --INICIO FUTURO
			SET @ES_VIGENTE = 0

		IF ISNULL(@FECHA_FIN,@FECHA_HOY) < @FECHA_HOY --ACCION PASADA
			SET @ES_VIGENTE = 0

		IF @ES_VIGENTE = 1
			BEGIN --BUSCAR ACCION VIGENTE CON FECHA DE INICIO MAYOR Y QUE HAYA AFECTADO LA SITUACION LABORAL
				IF EXISTS(
							SELECT	ASP.ID_ACCION_POR_SERVIDOR_PUBLICO
							FROM	transaccional.accion_por_servidor_publico AS ASP WITH (NOLOCK)
									INNER JOIN sistema.estado_registro AS ER WITH (NOLOCK)
										ON ASP.ID_ESTADO_REGISTRO = ER.ID_ESTADO_REGISTRO
									INNER JOIN sistema.situacion_laboral_motivo_accion AS SLMA WITH (NOLOCK)
										ON ASP.ID_MOTIVO_ACCION = SLMA.ID_MOTIVO_ACCION
							WHERE	ID_SERVIDOR_PUBLICO = @ID_SERVIDOR_PUBLICO
									AND SLMA.AFECTA_SITUACION_LABORAL = 1
									AND SLMA.ES_VIGENTE = 1
									AND ISNULL(ASP.ACCION_FINALIZADA,0) = 0
									AND ER.CODIGO_ESTADO_REGISTRO IN (5,13,20,23) --APROBADO,EN TRASLADO,APROBADO CON SOLICITUD DE ANULACIÓN,LIMITADO
									AND CONVERT(DATETIME,CONVERT(VARCHAR(12),ASP.FECHA_INICIO_ACCION_POR_SERVIDOR_PUBLICO)) >= @FECHA_INICIO
									AND @FECHA_HOY BETWEEN 
										CONVERT(DATETIME,CONVERT(VARCHAR(12),ASP.FECHA_INICIO_ACCION_POR_SERVIDOR_PUBLICO)) AND 
										ISNULL(CONVERT(DATETIME,CONVERT(VARCHAR(12),ASP.FECHA_FIN_ACCION_POR_SERVIDOR_PUBLICO)), @FECHA_ACTUAL)
						)
					BEGIN
						SET @ES_VIGENTE = 0
					END
			END

		SELECT	@ID_CONDICION_LABORAL = ID_CONDICION_LABORAL,
				@ID_SITUACION_LABORAL = ID_SITUACION_LABORAL
		FROM	transaccional.accion_por_servidor_publico_registro AS ASPR WITH (NOLOCK)
		WHERE	ID_SERVIDOR_PUBLICO = @ID_SERVIDOR_PUBLICO

		IF @ES_VIGENTE = 1 --Obteniendo nueva situación
			BEGIN
				SELECT	@ID_SITUACION_LABORAL = SL.ID_SITUACION_LABORAL
				FROM	sistema.situacion_laboral_motivo_accion AS SLMA WITH (NOLOCK)
						INNER JOIN sistema.situacion_laboral  AS SL WITH (NOLOCK) ON SL.ID_SITUACION_LABORAL = SLMA.ID_SITUACION_LABORAL
				WHERE	ID_MOTIVO_ACCION = @ID_MOTIVO_ACCION
						AND SL.ID_CONDICION_LABORAL = @ID_CONDICION_LABORAL
			END

		IF @CODIGO_FORMULARIO = 2
			BEGIN
				SELECT	@ID_CONDICION_LABORAL = ID_CONDICION_LABORAL,
						@ID_SITUACION_LABORAL = ID_SITUACION_LABORAL
				FROM	servicio.padron_nexus AS P
				WHERE	P.ID_REGIMEN = @ID_REGIMEN_ACTUAL
						AND P.NUMERO_DOCUMENTO = @NUMERO_DI_SP
			END


		--SELECT	@TOTAL = COUNT(SLMA.ID_SITUACION_LABORAL_MOTIVO_ACCION)
		--FROM	sistema.situacion_laboral_motivo_accion AS SLMA WITH (NOLOCK)
		--WHERE	ID_MOTIVO_ACCION = @ID_MOTIVO_ACCION

		--IF @TOTAL > 1
		--	BEGIN
		--		SELECT	@ID_COND_LAB_ACT = ID_CONDICION_LABORAL
		--		FROM	transaccional.accion_por_servidor_publico_registro AS ASPR WITH (NOLOCK)
		--		WHERE	ID_SERVIDOR_PUBLICO = @ID_SERVIDOR_PUBLICO

		--		--Obteniendo la situacion y la condicion laboral del servidor publico de la configuracion por motivo accion
		--		SELECT	@ID_SITUACION_LABORAL = SL.ID_SITUACION_LABORAL,
		--				@ID_CONDICION_LABORAL = SL.ID_CONDICION_LABORAL,
		--				@ES_VIGENTE = ISNULL(SLMA.AFECTA_SITUACION_LABORAL,0)
		--		FROM	sistema.situacion_laboral_motivo_accion AS SLMA WITH (NOLOCK)
		--				INNER JOIN sistema.situacion_laboral  AS SL WITH (NOLOCK) ON SL.ID_SITUACION_LABORAL = SLMA.ID_SITUACION_LABORAL
		--		WHERE	ID_MOTIVO_ACCION = @ID_MOTIVO_ACCION
		--				AND SL.ID_CONDICION_LABORAL = @ID_COND_LAB_ACT

		--		--SET @AFECTA_SITUACION_LABORAL = @ES_VIGENTE
		--	END
		--ELSE
		--	BEGIN
		--		SELECT	@ID_SITUACION_LABORAL = SLMA.ID_SITUACION_LABORAL,
		--				@ID_CONDICION_LABORAL = SL.ID_CONDICION_LABORAL,
		--				@ES_VIGENTE = ISNULL(SLMA.AFECTA_SITUACION_LABORAL,0)
		--		FROM	sistema.situacion_laboral_motivo_accion AS SLMA WITH (NOLOCK)
		--				INNER JOIN sistema.situacion_laboral  AS SL WITH (NOLOCK) ON SL.ID_SITUACION_LABORAL = SLMA.ID_SITUACION_LABORAL
		--		WHERE	ID_MOTIVO_ACCION = @ID_MOTIVO_ACCION
		--				AND SLMA.ES_VIGENTE = 1	

		--		--SET @AFECTA_SITUACION_LABORAL = @ES_VIGENTE
		--	END

		--SECCION 3, NUNCA VIGENTE
		IF @CODIGO_FORMULARIO = 1
			SET @ES_VIGENTE = 0


		IF @CODIGO_MOTIVO_ACCION IN (1642,1644) --CONTRATO POR HORAS ADICIONALES
			BEGIN --SETEANDO LA SITUACION LABORAL Y LA JORNADA DE LA SITUAION ACTUAL DEL SERVIDOR PUBLICO
				SELECT	@ID_JORNADA = ID_JORNADA
				FROM	transaccional.accion_por_servidor_publico_registro AS ASPR WITH (NOLOCK)
				WHERE	ID_SERVIDOR_PUBLICO = @ID_SERVIDOR_PUBLICO				
			END

		INSERT INTO maestro.puesto
		([ID_ESTADO_PUESTO], [ID_TIPO_PUESTO], [ID_CARGO], [ID_JORNADA], [ID_CENTRO], [CODIGO_PUESTO], [ES_HABILITADO_REEMPLAZO], 
		[ES_VIGENTE], [FECHA_INICIO_VIGENCIA], [FECHA_CREACION], [USUARIO_CREACION], [ES_BORRADO], [ID_TIPO_CICLO])
		VALUES
		(1, 1, @ID_CARGO, @ID_JORNADA, @ID_CENTRO, @CODIGO_PLAZA, 0,
		1, @FECHA_ACTUAL, @FECHA_ACTUAL, @USUARIO, 0, 3)
		SET @ID_PUESTO = SCOPE_IDENTITY();

		IF @ES_VIGENTE = 1
			BEGIN
				UPDATE	[transaccional].[puesto_por_accion_servidor_publico]
				SET		ES_VIGENTE = 0,
						FECHA_MODIFICACION = @FECHA_ACTUAL,
						USUARIO_MODIFICACION = @USUARIO
				WHERE	ID_ACCION_POR_SERVIDOR_PUBLICO IN
						(	SELECT ID_ACCION_POR_SERVIDOR_PUBLICO 
							FROM transaccional.accion_por_servidor_publico AS A WITH (NOLOCK)
							WHERE	A.ID_SERVIDOR_PUBLICO = @ID_SERVIDOR_PUBLICO
									AND A.ES_VIGENTE = 1)
						AND ES_VIGENTE = 1

				UPDATE	[transaccional].[accion_por_servidor_publico]
				SET		ES_VIGENTE = 0
				WHERE	ID_SERVIDOR_PUBLICO = @ID_SERVIDOR_PUBLICO
						AND ES_VIGENTE = 1
			END

		/*******************************/
		/* VALIDACIONES DE NOMBRAMIENTO */
		/*******************************/
		SELECT  @TOTAL_NOMBRAMIENTO_REGISTRADOS = COUNT(*) FROM transaccional.asp_consolidado AS ASPC WITH (NOLOCK) WHERE ID_SERVIDOR_PUBLICO = @ID_SERVIDOR_PUBLICO AND CODIGO_GRUPO_ACCION = 1 AND ESTADO_REGISTRO LIKE '%APROBADO%' AND ID_MOTIVO_ACCION IN (52, 1900)

		IF @TOTAL_NOMBRAMIENTO_REGISTRADOS > 1 
		BEGIN
			SET @Message = 'Solo se permite como máximo 2 acciones de nombramiento para el Régimen 726.';
			RAISERROR(@Message,11,1)
		END

		IF (@TOTAL_NOMBRAMIENTO_REGISTRADOS  = 1 )
		BEGIN
			--SELECT @TOTAL_CESE_REGISTRADO = COUNT(*) FROM transaccional.accion_por_servidor_publico_registro (NOLOCK) WHERE ID_SERVIDOR_PUBLICO = @ID_SERVIDOR_PUBLICO AND SITUACION_LABORAL LIKE '%CESADO%' 
			SELECT @TOTAL_CESE_REGISTRADO = COUNT(*) FROM transaccional.asp_consolidado AS ASPC WITH (NOLOCK) WHERE ID_SERVIDOR_PUBLICO = @ID_SERVIDOR_PUBLICO AND SITUACION_LABORAL LIKE '%CESADO%' AND CODIGO_ESTADO_REGISTRO = 5
			IF (@TOTAL_CESE_REGISTRADO = 1) 
				BEGIN
					SELECT @ID_MOTIVO_ACCION_REG = ID_MOTIVO_ACCION  FROM transaccional.asp_consolidado AS ASPC WITH (NOLOCK) WHERE ID_SERVIDOR_PUBLICO =@ID_SERVIDOR_PUBLICO AND CODIGO_GRUPO_ACCION = 1 AND ESTADO_REGISTRO LIKE '%APROBADO%'
					PRINT @ID_MOTIVO_ACCION_REG
					PRINT @ID_MOTIVO_ACCION
					IF (@ID_MOTIVO_ACCION_REG = @ID_MOTIVO_ACCION)
					BEGIN
						IF (@ID_MOTIVO_ACCION = 52) 
						BEGIN
							SET @Message = 'Ya tiene un registro de Concurso público para ingreso, poramiguito cua favor seleccione otro motivo acción.';
							RAISERROR(@Message,11,1)
						END
						IF (@ID_MOTIVO_ACCION = 1900) 
						BEGIN
							SET @Message = 'Ya tiene un registro de LEY 27803 cese colectivo, por favor seleccione otro motivo acción.';
							RAISERROR(@Message,11,1)	
						END
					END
				END 
			ELSE 
				BEGIN 
					SET @Message = 'El legajo no cuenta con la resolución de cese para registrar el segundo nombramiento.';
					RAISERROR(@Message,11,1)
				END
		END 

		INSERT INTO [transaccional].[accion_por_servidor_publico]
		(ID_MOTIVO_ACCION, ID_SERVIDOR_PUBLICO, ID_MOTIVO_POR_ESTADO_ENTIDAD, CODIGO_ACCION_POR_SERVIDOR_PUBLICO,
		FECHA_INICIO_ACCION_POR_SERVIDOR_PUBLICO, FECHA_FIN_ACCION_POR_SERVIDOR_PUBLICO, NUMERO_EXPEDIENTE_ACCION_POR_SERVIDOR_PUBLICO, CANTIDAD_FOLIOS_ACCION_POR_SERVIDOR_PUBLICO,
		OBSERVACION_ACCION_POR_SERVIDOR_PUBLICO,FOLIOS_DOCUMENTO, NOMBRE_DOCUMENTO, NOMBRE_ARCHIVO,
		VERIFICADO_RNSDD, ES_MANDATO_JUDICIAL_ACCION_POR_SERVIDOR_PUBLICO, PERIODO_ACCION_POR_SERVIDOR_PUBLICO, 
		ID_TIPO_RESOLUCION, NUMERO_RESOLUCION, FECHA_RESOLUCION, 
		ID_ESTADO_REGISTRO,	ES_VIGENTE, FECHA_INICIO_VIGENCIA, FECHA_CREACION, USUARIO_CREACION, NOMBRE_USUARIO_CREA, AMBITO_USUARIO_CREA, ROL_USUARIO_CREA, ES_BORRADO, ES_HISTORICO)
		SELECT	@ID_MOTIVO_ACCION, @ID_SERVIDOR_PUBLICO, 3, '12345678',
				@FECHA_INICIO, @FECHA_FIN, '', 0,
				UPPER(NULLIF(c.value('@OBSERVACION', 'VARCHAR(250)'),'')),
				NULLIF(c.value('@FOLIOS_DOCUMENTO', 'INT'),0),
				c.value('@NOMBRE_DOCUMENTO', 'VARCHAR(250)'),
				c.value('@NOMBRE_ARCHIVO', 'VARCHAR(250)'),
				0, ISNULL(c.value('@ES_MANDATO_JUDICIAL', 'BIT'),0), '2020',
				@ID_TIPO_RESOLUCION, @NUMERO_RESOLUCION, c.value('@FECHA_RESOLUCION', 'DATETIME'),
				@ID_ESTADO_REGISTRO, @ES_VIGENTE, @FECHA_ACTUAL, @FECHA_ACTUAL, @USUARIO, @NOMBRE_USUARIO, @AMBITO, @ROL, 0, @ES_VIGENTE
		FROM	@REQUEST_XML.nodes('/root/accion') x(c);
		SET @ID_ACCION_XSP = SCOPE_IDENTITY();		

		INSERT INTO [transaccional].[puesto_por_accion_servidor_publico]
		([ID_ACCION_POR_SERVIDOR_PUBLICO], [ID_PUESTO], [ID_CATEGORIA_REMUNERATIVA], [ID_REGIMEN], [ID_SITUACION_LABORAL], [ID_CONDICION_LABORAL], 
		[FECHA_INICIO], [ES_EXCEDENTE], [ES_VIGENTE], [FECHA_INICIO_VIGENCIA], [FECHA_CREACION], [USUARIO_CREACION], [ES_BORRADO], [ES_DIRECTIVO],[HORAS_ADICIONALES])
		VALUES
		(@ID_ACCION_XSP, @ID_PUESTO, NULLIF(@ID_CATEGORIA_REMUNERATIVA,0), @ID_REGIMEN, @ID_SITUACION_LABORAL, @ID_CONDICION_LABORAL,
		@FECHA_INICIO,0, @ES_VIGENTE,@FECHA_ACTUAL, @FECHA_ACTUAL, @USUARIO, 0, 0, @HORAS_ADICIONALES)

		DECLARE	@OTRO_CARGO VARCHAR(100),
				@ACCION VARCHAR(100)

		SELECT	@OTRO_CARGO = CASE WHEN C.CODIGO_CARGO = 0 THEN @OTRO_CARGO ELSE C.DESCRIPCION_CARGO END
		FROM	sistema.cargo AS C WITH (NOLOCK)
		WHERE	C.ID_CARGO = @ID_CARGO

		SELECT	@CODIGO_JORNADA = J.CODIGO_JORNADA,
				@DESCRIPCION_JORNADA = J.DESCRIPCION_JORNADA
		FROM	sistema.jornada AS J WITH (NOLOCK)
		WHERE	J.ID_JORNADA = @ID_JORNADA

		IF @CODIGO_JORNADA = 999 --OTRA JORNADA
			BEGIN
				SELECT	@ID_JORNADA = ID_JORNADA,
						@DESCRIPCION_JORNADA = DESCRIPCION_JORNADA
				FROM	sistema.jornada AS J WITH (NOLOCK)
				WHERE	CANTIDAD_JORNADA = @OTRA_JORNADA AND ES_VIGENTE = 1
				IF @@ROWCOUNT = 0
					BEGIN
						SET @DESCRIPCION_JORNADA = CONVERT(VARCHAR(5), @OTRA_JORNADA) + ' HORAS'

						INSERT INTO sistema.jornada
						([ID_TIPO_JORNADA], [CODIGO_JORNADA], [CODIGO_ORIGEN], [DESCRIPCION_JORNADA], [ORDEN], [CANTIDAD_JORNADA],
						[INGRESO_MANUAL], [ES_VIGENTE], [FECHA_INICIO_VIGENCIA], [FECHA_CREACION], [USUARIO_CREACION],[ES_BORRADO])
						VALUES(3,0,0,@DESCRIPCION_JORNADA, @OTRA_JORNADA, @OTRA_JORNADA, 
						0, 1, @FECHA_ACTUAL, @FECHA_ACTUAL, @USUARIO, 0)
						SET @ID_JORNADA = IDENT_CURRENT('sistema.jornada');
					END
			END

		INSERT INTO [transaccional].[accion_por_servidor_publico_escalafon]
		([ID_ACCION_POR_SERVIDOR_PUBLICO], [ID_MODALIDAD_EDUCATIVA], [MODALIDAD_EDUCATIVA], [ID_NIVEL_EDUCATIVO], [NIVEL_EDUCATIVO], 
		[ID_CARGO], [CARGO], [ID_JORNADA], [JORNADA], [ES_USE_ZONA_SUBREGION], [USE_ZONA_SUBREGION])
		VALUES
		(@ID_ACCION_XSP, @ID_MODALIDAD_EDUCATIVA, @MODALIDAD_EDUCATIVA, @ID_NIVEL_EDUCATIVO, @NIVEL_EDUCATIVA, 
		@ID_CARGO, @OTRO_CARGO, @ID_JORNADA, @DESCRIPCION_JORNADA, @ES_USE_ZONA_SUBREGION, NULLIF(@USE_ZONA_SUBREGION,''))

		--REGISTRANDO EL CONSOLIDADO
		INSERT INTO transaccional.asp_consolidado
		(ID_ACCION_POR_SERVIDOR_PUBLICO, ID_GRUPO_ACCION, CODIGO_GRUPO_ACCION, ID_MOTIVO_ACCION, ID_SERVIDOR_PUBLICO, MOTIVO_ACCION, ACCION, FECHA_INICIO_ACCION_POR_SERVIDOR_PUBLICO,
		FECHA_FIN_ACCION_POR_SERVIDOR_PUBLICO, OBSERVACION_ACCION_POR_SERVIDOR_PUBLICO,NOMBRE_DOCUMENTO,NOMBRE_ARCHIVO,FOLIOS_DOCUMENTO,
		ES_MANDATO_JUDICIAL_ACCION_POR_SERVIDOR_PUBLICO, TIPO_RESOLUCION, ABRE_TIPO_RESOLUCION,
		NUMERO_RESOLUCION, FECHA_RESOLUCION, CODIGO_ESTADO_REGISTRO, ESTADO_REGISTRO, ID_CATEGORIA_REMUNERATIVA, CATEGORIA_REMUNERATIVA, ID_REGIMEN, REGIMEN, ID_SITUACION_LABORAL, SITUACION_LABORAL,
		ID_CONDICION_LABORAL, CONDICION_LABORAL, ID_CARGO, CARGO, ID_JORNADA, JORNADA, CODIGO_PLAZA, ID_CENTRO, CODIGO_MODULAR_IE, CENTRO_LABORAL, ID_DRE, DRE, ID_UGEL, UGEL, REGION,
		ID_MODALIDAD_EDUCATIVA, MODALIDAD_EDUCATIVA, ID_NIVEL_EDUCATIVO, NIVEL_EDUCATIVO, ES_USE_ZONA_SUBREGION, USE_ZONA_SUBREGION, ES_VIGENTE, FECHA_CREACION, USUARIO_CREACION, NOMBRE_USUARIO_CREA,
		AMBITO_USUARIO_CREA, ROL_USUARIO_CREA, ES_BORRADO, HORAS_ADICIONALES)
		SELECT 
		ASP.ID_ACCION_POR_SERVIDOR_PUBLICO, RG.ID_GRUPO_ACCION, GA.CODIGO_GRUPO_ACCION, ASP.ID_MOTIVO_ACCION, ASP.ID_SERVIDOR_PUBLICO, M.DESCRIPCION_MOTIVO_ACCION, A.DESCRIPCION_ACCION, ASP.FECHA_INICIO_ACCION_POR_SERVIDOR_PUBLICO,
		ASP.FECHA_FIN_ACCION_POR_SERVIDOR_PUBLICO, ASP.OBSERVACION_ACCION_POR_SERVIDOR_PUBLICO, ASP.NOMBRE_DOCUMENTO,ASP.NOMBRE_ARCHIVO,ASP.FOLIOS_DOCUMENTO,
		ASP.ES_MANDATO_JUDICIAL_ACCION_POR_SERVIDOR_PUBLICO, TR.NOMBRE_TIPO_RESOLUCION, TR.ABREVIATURA,
		ASP.NUMERO_RESOLUCION, ASP.FECHA_RESOLUCION, ER.CODIGO_ESTADO_REGISTRO, ER.DESCRIPCION_ESTADO_REGISTRO, CR.ID_CATEGORIA_REMUNERATIVA, CR.DESCRIPCION_CATEGORIA_REMUNERATIVA, R.ID_REGIMEN, 
		R.DESCRIPCION_REGIMEN, SL.ID_SITUACION_LABORAL, SL.DESCRIPCION_SITUACION_LABORAL, CL.ID_CONDICION_LABORAL, CL.DESCRIPCION_CONDICION_LABORAL, @ID_CARGO, @OTRO_CARGO, @ID_JORNADA, @DESCRIPCION_JORNADA, 
		P.CODIGO_PUESTO, P.ID_CENTRO, CE.CODIGO_CENTRO, CE.DESCRIPCION_CENTRO, CE.ID_CENTRO_DRE, REPLACE(CE.DESCRIPCION_CENTRO_DRE,'DIRECCION REGIONAL DE EDUCACION','DRE'), 
		CE.ID_CENTRO_UGEL, REPLACE(CE.DESCRIPCION_CENTRO_UGEL,'UNIDAD DE GESTION EDUCATIVA LOCAL','UGEL'), U.DESCRIPCION_UBIGEO_DEPARTAMENTO + ' - ' + U.DESCRIPCION_UBIGEO_PROVINCIA + ' - ' + U.DESCRIPCION_UBIGEO_DISTRITO,
		@ID_MODALIDAD_EDUCATIVA, @MODALIDAD_EDUCATIVA, @ID_NIVEL_EDUCATIVO, @NIVEL_EDUCATIVA, @ES_USE_ZONA_SUBREGION, @USE_ZONA_SUBREGION, ASP.ES_VIGENTE, ASP.FECHA_CREACION, ASP.USUARIO_CREACION, ASP.NOMBRE_USUARIO_CREA,
		ASP.AMBITO_USUARIO_CREA, ASP.ROL_USUARIO_CREA, ASP.ES_BORRADO, @HORAS_ADICIONALES
		FROM	transaccional.accion_por_servidor_publico AS ASP WITH (NOLOCK)
				INNER JOIN maestro.servidor_publico AS S WITH (NOLOCK) ON S.ID_SERVIDOR_PUBLICO = ASP.ID_SERVIDOR_PUBLICO
				INNER JOIN transaccional.puesto_por_accion_servidor_publico AS PASP WITH (NOLOCK) ON ASP.ID_ACCION_POR_SERVIDOR_PUBLICO = PASP.ID_ACCION_POR_SERVIDOR_PUBLICO
				LEFT JOIN sistema.categoria_remunerativa AS CR WITH (NOLOCK) ON PASP.ID_CATEGORIA_REMUNERATIVA = CR.ID_CATEGORIA_REMUNERATIVA
				INNER JOIN maestro.puesto AS P WITH (NOLOCK) ON PASP.ID_PUESTO = P.ID_PUESTO
				INNER JOIN sistema.condicion_laboral AS CL WITH (NOLOCK) ON PASP.ID_CONDICION_LABORAL = CL.ID_CONDICION_LABORAL
				INNER JOIN sistema.situacion_laboral AS SL WITH (NOLOCK) ON PASP.ID_SITUACION_LABORAL = SL.ID_SITUACION_LABORAL
				INNER JOIN sistema.motivo_accion AS M WITH (NOLOCK) ON M.ID_MOTIVO_ACCION = ASP.ID_MOTIVO_ACCION
				INNER JOIN sistema.accion AS A ON A.ID_ACCION = M.ID_ACCION
				INNER JOIN parametrica.regimen_por_grupo_accion AS RG WITH (NOLOCK) ON RG.ID_REGIMEN_POR_GRUPO_ACCION = A.ID_REGIMEN_POR_GRUPO_ACCION
				INNER JOin sistema.grupo_accion AS GA WITH (NOLOCK) ON RG.ID_GRUPO_ACCION = GA.ID_GRUPO_ACCION
				INNER JOIN sistema.estado_registro AS ER WITH (NOLOCK) ON ASP.ID_ESTADO_REGISTRO = ER.ID_ESTADO_REGISTRO
				INNER JOIN sistema.regimen AS R WITH (NOLOCK) ON RG.ID_REGIMEN = R.ID_REGIMEN
				LEFT JOIN maestro.centro AS CE WITH (NOLOCK) ON CE.ID_CENTRO = P.ID_CENTRO
				LEFT JOIN sistema.ubigeo AS U WITH (NOLOCK) ON CE.ID_UBIGEO = U.ID_UBIGEO
				LEFT JOIN sistema.tipo_resolucion AS TR WITH (NOLOCK) ON ASP.ID_TIPO_RESOLUCION = TR.ID_TIPO_RESOLUCION
		WHERE	ASP.ID_ACCION_POR_SERVIDOR_PUBLICO = @ID_ACCION_XSP
		SET @ID_ASP_CONSOLIDADO = IDENT_CURRENT('transaccional.asp_consolidado');

		IF NOT EXISTS(	SELECT	ID_ACCION_POR_SERVIDOR_PUBLICO 
						FROM	transaccional.accion_por_servidor_publico_registro AS ASPR WITH (NOLOCK)
						WHERE	ID_SERVIDOR_PUBLICO = @ID_SERVIDOR_PUBLICO)
			BEGIN
				UPDATE	maestro.servidor_publico
				SET		ES_EXTRABAJADOR = 0
				WHERE	ID_SERVIDOR_PUBLICO = @ID_SERVIDOR_PUBLICO

				INSERT INTO transaccional.accion_por_servidor_publico_registro
				(ID_ACCION_POR_SERVIDOR_PUBLICO, ID_SERVIDOR_PUBLICO, ID_TIPO_DOCUMENTO_IDENTIDAD, TIPO_DOCUMENTO_IDENTIDAD, NUMERO_DOCUMENTO_IDENTIDAD, 
				PRIMER_APELLIDO_PERSONA, SEGUNDO_APELLIDO_PERSONA, NOMBRES_PERSONA, ID_CONDICION_LABORAL, CONDICION_LABORAL, ID_REGIMEN,
				REGIMEN_LABORAL, ID_SITUACION_LABORAL, SITUACION_LABORAL, CODIGO_PLAZA, 
				ID_CARGO, CARGO, ID_CENTRO_DRE, CENTRO_DRE, ID_CENTRO_UGEL, CENTRO_UGEL, ID_CENTRO_IIEE, CODIGO_MODULAR, NOMBRE_IIEE,
				ID_CENTRO, CENTRO, NOMBRE_COMPLETO, ID_TIPO_CENTRO, GENERO, CODIGO_GENERO, RUTA_ARCHIVOS,
				ID_NIVEL_EDUCATIVO, NIVEL_EDUCATIVO, ID_MODALIDAD, MODALIDAD, REGION, ID_JORNADA, JORNADA, ACCION, ID_CATEGORIA_REMUNERATIVA, CATEGORIA_REMUNERATIVA,
				ES_EXTRABAJADOR)
				SELECT DISTINCT 
				ID_ACCION_POR_SERVIDOR_PUBLICO, S.ID_SERVIDOR_PUBLICO, P.ID_TIPO_DOCUMENTO_IDENTIDAD, TI.ABREVIATURA_TIPO_DOCUMENTO_IDENTIDAD, NUMERO_DOCUMENTO_IDENTIDAD_PERSONA,
				P.PRIMER_APELLIDO_PERSONA, P.SEGUNDO_APELLIDO_PERSONA, P.NOMBRES_PERSONA, ID_CONDICION_LABORAL, CONDICION_LABORAL, ASPC.ID_REGIMEN,
				REGIMEN, ID_SITUACION_LABORAL, SITUACION_LABORAL, CODIGO_PLAZA,
				ID_CARGO, CARGO, ID_DRE, DRE, ID_UGEL, UGEL, ASPC.ID_CENTRO, CODIGO_MODULAR_IE, CENTRO_LABORAL,
				ASPC.ID_CENTRO, CENTRO_LABORAL, P.PRIMER_APELLIDO_PERSONA + ISNULL(' ' + P.SEGUNDO_APELLIDO_PERSONA,'') + ', ' + P.NOMBRES_PERSONA, @ID_TIPO_CENTRO, 
				G.DESCRIPCION_GENERO_PERSONA, G.CODIGO_GENERO_PERSONA, P.RUTA_ARCHIVOS,
				@ID_NIVEL_EDUCATIVO, @NIVEL_EDUCATIVA, @ID_MODALIDAD_EDUCATIVA, @MODALIDAD_EDUCATIVA, @REGION, @ID_JORNADA, @DESCRIPCION_JORNADA, ASPC.ACCION, ASPC.ID_CATEGORIA_REMUNERATIVA, ASPC.CATEGORIA_REMUNERATIVA,
				S.ES_EXTRABAJADOR
				FROM	transaccional.asp_consolidado AS ASPC WITH (NOLOCK)
						INNER JOIN maestro.servidor_publico AS S ON ASPC.ID_SERVIDOR_PUBLICO = S.ID_SERVIDOR_PUBLICO
						INNER JOIN maestro.persona AS P WITH (NOLOCK) ON S.ID_PERSONA = P.ID_PERSONA
						INNER JOIN sistema.genero_persona AS G WITH (NOLOCK) ON P.ID_GENERO_PERSONA = G.ID_GENERO_PERSONA
						INNER JOIN sistema.tipo_documento_identidad AS TI WITH (NOLOCK) ON P.ID_TIPO_DOCUMENTO_IDENTIDAD = TI.ID_TIPO_DOCUMENTO_IDENTIDAD
				WHERE	ASPC.ID_ASP_CONSOLIDADO = @ID_ASP_CONSOLIDADO
			END
				
		--RFC5: 2021-03-07 SE AGREGA VALIDACION PARA NO ACTUALIZAR SITUACION LABORAL ACTUAL DE CESADOS O PENSIONISTAS
		IF @ES_VIGENTE = 1 --AND @ID_SITUACION_LABORAL_ACTUAL NOT IN (9,28,34,35,36,37,38) 
			BEGIN
				UPDATE	maestro.servidor_publico
				SET		ES_EXTRABAJADOR = 0
				WHERE	ID_SERVIDOR_PUBLICO = @ID_SERVIDOR_PUBLICO

				--Actualizando registro
				UPDATE	A
				SET		ID_CONDICION_LABORAL = B.ID_CONDICION_LABORAL,				CONDICION_LABORAL = B.CONDICION_LABORAL,
						--ID_REGIMEN = B.ID_REGIMEN,									REGIMEN_LABORAL = B.REGIMEN,
						ID_SITUACION_LABORAL = B.ID_SITUACION_LABORAL,				SITUACION_LABORAL = B.SITUACION_LABORAL, 
						CODIGO_PLAZA = B.CODIGO_PLAZA,								ID_CARGO = B.ID_CARGO,										
						CARGO = B.CARGO,
						ID_CENTRO_DRE = B.ID_DRE,									CENTRO_DRE = B.DRE, 
						ID_CENTRO_UGEL = B.ID_UGEL,									CENTRO_UGEL = B.UGEL, 
						ID_CENTRO_IIEE = B.ID_CENTRO,								CODIGO_MODULAR = B.CODIGO_MODULAR_IE,
						NOMBRE_IIEE = B.CENTRO_LABORAL,								ID_CENTRO = B.ID_CENTRO, 
						CENTRO = B.CENTRO_LABORAL,									ID_TIPO_CENTRO = @ID_TIPO_CENTRO,
						ID_NIVEL_EDUCATIVO = @ID_NIVEL_EDUCATIVO,					NIVEL_EDUCATIVO = @NIVEL_EDUCATIVA,
						ID_MODALIDAD = @ID_MODALIDAD_EDUCATIVA,						MODALIDAD = @MODALIDAD_EDUCATIVA,
						REGION = @REGION,											ID_JORNADA = @ID_JORNADA,
						JORNADA = @DESCRIPCION_JORNADA,								ACCION = B.ACCION,		
						ID_CATEGORIA_REMUNERATIVA = B.ID_CATEGORIA_REMUNERATIVA,	CATEGORIA_REMUNERATIVA = B.CATEGORIA_REMUNERATIVA,
						ES_EXTRABAJADOR = 0,
						ID_ACCION_POR_SERVIDOR_PUBLICO = @ID_ACCION_XSP
				FROM	transaccional.accion_por_servidor_publico_registro AS A
						INNER JOIN
						(
							SELECT DISTINCT ASPC.ID_SERVIDOR_PUBLICO,		ASPC.ID_CONDICION_LABORAL,
											ASPC.CONDICION_LABORAL,			ASPC.ID_REGIMEN,
											ASPC.REGIMEN,					ASPC.ID_SITUACION_LABORAL,
											ASPC.SITUACION_LABORAL,			ASPC.CODIGO_PLAZA,
											ASPC.ID_CARGO,					ASPC.CARGO,
											ASPC.ID_DRE,					ASPC.DRE,
											ASPC.ID_UGEL,					ASPC.UGEL,
											ASPC.ID_CENTRO,					ASPC.CODIGO_MODULAR_IE,
											ASPC.CENTRO_LABORAL,			ASPC.ID_CATEGORIA_REMUNERATIVA,
											ASPC.CATEGORIA_REMUNERATIVA,	ASPC.ACCION
							FROM	transaccional.asp_consolidado AS ASPC
							WHERE	ID_ASP_CONSOLIDADO = @ID_ASP_CONSOLIDADO
						) AS B ON A.ID_SERVIDOR_PUBLICO = B.ID_SERVIDOR_PUBLICO
			END

		IF @ACCION_REEMPLAZO = 1
			BEGIN
				DECLARE @ID_ASP INT = 0,
						@ID_ESTADO_REGISTRO_ANULADO INT,
						@ESTADO_REGISTRO_ANULADO VARCHAR(20)

				SELECT	@ID_ESTADO_REGISTRO_ANULADO = ER.ID_ESTADO_REGISTRO,
						@ESTADO_REGISTRO_ANULADO = ER.DESCRIPCION_ESTADO_REGISTRO
				FROM	sistema.estado_registro AS ER WITH (NOLOCK)
				WHERE	ER.CODIGO_ESTADO_REGISTRO = 6 --ANULADO
								
				SELECT	ER.ID_REGISTRO_ENTIDAD AS ID_MOTIVO_ACCION
				INTO	#MOTIVO_ACCION_UNICO
				FROM	sistema.entidad_regla AS ER WITH (NOLOCK)
							INNER JOIN sistema.regla AS R WITH (NOLOCK) ON ER.ID_REGLA = R.ID_REGLA
						INNER JOIN sistema.motivo_accion AS MA WITH (NOLOCK) ON ER.ID_REGISTRO_ENTIDAD = MA.ID_MOTIVO_ACCION
						INNER JOIN sistema.accion AS A WITH (NOLOCK) ON MA.ID_ACCION = A.ID_ACCION
						INNER JOIN parametrica.regimen_por_grupo_accion AS RGA WITH (NOLOCK) ON A.ID_REGIMEN_POR_GRUPO_ACCION = RGA.ID_REGIMEN_POR_GRUPO_ACCION
				WHERE	ER.ES_VIGENTE = 1 
						--AND RGA.ID_REGIMEN = @ID_REGIMEN
						AND R.CODIGO_REGLA = 37 --MOTIVOS DE ACCION DE REEMPLAZO, UNICAS POR SERVIDOR PUBLICO

				SELECT	ID_ACCION_POR_SERVIDOR_PUBLICO
				INTO	#ACCIONES_A_ANULAR
				FROM	transaccional.accion_por_servidor_publico AS ASP WITH (NOLOCK)
						INNER JOIN sistema.estado_registro AS ER WITH (NOLOCK) ON ASP.ID_ESTADO_REGISTRO = ER.ID_ESTADO_REGISTRO
						INNER JOIN #MOTIVO_ACCION_UNICO AS T ON ASP.ID_MOTIVO_ACCION = T.ID_MOTIVO_ACCION
				WHERE	ER.CODIGO_ESTADO_REGISTRO <> 6
						AND ASP.ID_SERVIDOR_PUBLICO = @ID_SERVIDOR_PUBLICO
						--AND ASP.ID_MOTIVO_ACCION = @ID_MOTIVO_ACCION
						AND ASP.ID_ACCION_POR_SERVIDOR_PUBLICO <> @ID_ACCION_XSP
						
				UPDATE	transaccional.accion_por_servidor_publico
				SET		ID_ESTADO_REGISTRO = @ID_ESTADO_REGISTRO_ANULADO,
						USUARIO_MODIFICACION = @USUARIO,
						FECHA_MODIFICACION = @FECHA_ACTUAL,
						NOMBRE_USUARIO_MODIFICA = @NOMBRE_USUARIO,
						AMBITO_USUARIO_MODIFICA = @AMBITO,
						ROL_USUARIO_MODIFICA = @ROL
				WHERE	ID_ACCION_POR_SERVIDOR_PUBLICO IN (SELECT ID_ACCION_POR_SERVIDOR_PUBLICO FROM #ACCIONES_A_ANULAR)

				UPDATE	transaccional.asp_consolidado
				SET		ESTADO_REGISTRO = @ESTADO_REGISTRO_ANULADO,
						CODIGO_ESTADO_REGISTRO = 6,
						USUARIO_MODIFICACION = @USUARIO,
						FECHA_MODIFICACION = @FECHA_ACTUAL,
						NOMBRE_USUARIO_MODIFICA = @NOMBRE_USUARIO,
						AMBITO_USUARIO_MODIFICA = @AMBITO,
						ROL_USUARIO_MODIFICA = @ROL
				WHERE	ID_ACCION_POR_SERVIDOR_PUBLICO IN (SELECT ID_ACCION_POR_SERVIDOR_PUBLICO FROM #ACCIONES_A_ANULAR)

				UPDATE	transaccional.asp_consolidado_registro
				SET		ESTADO_REGISTRO = @ESTADO_REGISTRO_ANULADO,
						CODIGO_ESTADO_REGISTRO = 6,
						USUARIO_MODIFICACION = @USUARIO,
						FECHA_MODIFICACION = @FECHA_ACTUAL,
						NOMBRE_USUARIO_MODIFICA = @NOMBRE_USUARIO,
						AMBITO_USUARIO_MODIFICA = @AMBITO,
						ROL_USUARIO_MODIFICA = @ROL
				WHERE	ID_ACCION_POR_SERVIDOR_PUBLICO IN (SELECT ID_ACCION_POR_SERVIDOR_PUBLICO FROM #ACCIONES_A_ANULAR)

			END

		--ACTUALIZACION DEL FLAG = 0 PARA SER TOMADO POR EL JOB DIARIO DE CALCULO DE ATS 25 Y 30 18-01-2021
		--SEGUN REGLA 43
		IF EXISTS (	SELECT	ID_REGISTRO_ENTIDAD 
					FROM	sistema.entidad_regla AS ER WITH (NOLOCK)
							INNER JOIN sistema.regla AS R WITH (NOLOCK) ON ER.ID_REGLA = R.ID_REGLA
					WHERE	R.CODIGO_REGLA = 43 
							AND ER.ES_VIGENTE = 1
							AND ER.ID_REGISTRO_ENTIDAD = @ID_MOTIVO_ACCION)
		BEGIN			
			UPDATE	maestro.servidor_publico 
			SET		ACTUALIZADO_ATS = 0 
			WHERE	ID_SERVIDOR_PUBLICO =  @ID_SERVIDOR_PUBLICO   
		END

		DECLARE @FECHA DATETIME = CONVERT(DATETIME,CONVERT(VARCHAR(12),GETDATE()))
		SET @FECHA = DATEADD(SECOND,-1,@FECHA)

		SELECT	ER.ID_REGISTRO_ENTIDAD, R.CODIGO_REGLA
		INTO	#MOTIVOACCION_NOANULA
		FROM	sistema.entidad_regla AS ER WITH (NOLOCK)
				INNER JOIN sistema.regla AS R WITH (NOLOCK) ON ER.ID_REGLA  =R.ID_REGLA
		WHERE	R.CODIGO_REGLA IN (34,35)
				AND ER.ES_VIGENTE = 1

		SET @xml_acciones = 
		(SELECT	r.TipoResolucion, r.TipoResolucionAbreviado, r.NumeroResolucion, r.FechaResolucion, r.Regimen, r.Accion, r.MotivoAccion, r.CodigoPlaza, r.CodigoModular, 
				r.CentroLaboral, r.UseZonaSubregion, r.DRE, r.UGEL, r.Region, r.ModalidadEducativa, r.NivelEducativo, r.Cargo, r.Jornada,	r.SituacionLaboral,
				r.CondicionLaboral, r.CategoriaRemunerativa, r.FechaInicio, r.FechaFin, r.Anotaciones,r.NombreDocumento,r.NombreArchivo, r.EstadoRegistro, r.CodigoEstadoRegistro, r.IdUgel,
				r.IdAccionServidorPublico, r.FechaCrea, r.NombreUsuarioCrea, r.AmbitoUsuarioCrea, r.RolUsuarioCrea, r.FechaModifica, r.NombreUsuarioModifica, 
				r.AmbitoUsuarioModifica, r.RolUsuarioModifica, r.EsVigente, r.Anular, r.Modifica, r.[Row], r.Total, r.FoliosDocumento, r.PorMandatoJudicial, r.HorasAdicionales
		 FROM	(	
					SELECT	ROW_NUMBER() OVER (ORDER BY ASPC.FECHA_RESOLUCION DESC, ASPC.ID_ACCION_POR_SERVIDOR_PUBLICO DESC) AS [Row],
							COUNT(1) OVER() AS Total,
							ASPC.TIPO_RESOLUCION AS TipoResolucion,
							ASPC.ABRE_TIPO_RESOLUCION AS TipoResolucionAbreviado,
							ASPC.NUMERO_RESOLUCION AS NumeroResolucion,
							FORMAT(ASPC.FECHA_RESOLUCION,'dd/MM/yyyy') AS FechaResolucion,
							ASPC.REGIMEN AS Regimen,
							ASPC.ACCION AS Accion,
							ASPC.MOTIVO_ACCION AS MotivoAccion,
							ASPC.CODIGO_PLAZA AS CodigoPlaza,
							ASPC.CODIGO_MODULAR_IE AS CodigoModular,
							ASPC.CENTRO_LABORAL AS CentroLaboral,
							ASPC.REGION AS Region,
							ISNULL(ASPC.USE_ZONA_SUBREGION,'') AS UseZonaSubregion,
							ASPC.DRE,
							CASE WHEN ISNULL(ASPC.ES_USE_ZONA_SUBREGION,0) = 1 THEN '-' ELSE ASPC.UGEL END AS UGEL,
							ASPC.MODALIDAD_EDUCATIVA AS ModalidadEducativa,
							ASPC.NIVEL_EDUCATIVO AS NivelEducativo,
							ASPC.SITUACION_LABORAL AS SituacionLaboral,
							ASPC.CONDICION_LABORAL AS CondicionLaboral,
							ASPC.CARGO AS Cargo,
							ASPC.JORNADA AS Jornada,
							ASPC.CATEGORIA_REMUNERATIVA AS CategoriaRemunerativa,
							FORMAT(ASPC.FECHA_INICIO_ACCION_POR_SERVIDOR_PUBLICO,'dd/MM/yyyy') AS FechaInicio,
							FORMAT(ASPC.FECHA_FIN_ACCION_POR_SERVIDOR_PUBLICO,'dd/MM/yyyy') AS FechaFin,
							ASPC.ES_MANDATO_JUDICIAL_ACCION_POR_SERVIDOR_PUBLICO AS PorMandatoJudicial,
							ASPC.OBSERVACION_ACCION_POR_SERVIDOR_PUBLICO AS Anotaciones,
							ASPC.FOLIOS_DOCUMENTO AS FoliosDocumento,
							ASPC.NOMBRE_DOCUMENTO AS NombreDocumento,
							ASPC.NOMBRE_ARCHIVO AS NombreArchivo,

							ASPC.ESTADO_REGISTRO AS EstadoRegistro,
							ASPC.CODIGO_ESTADO_REGISTRO AS CodigoEstadoRegistro,
							ASPC.ID_UGEL AS IdUgel,
							ASPC.ID_ACCION_POR_SERVIDOR_PUBLICO AS IdAccionServidorPublico,
							ASPC.ES_VIGENTE AS EsVigente,
							--CONVERT(BIT,CASE WHEN ASPC.CODIGO_ESTADO_REGISTRO = 5 THEN 1 ELSE 0 END) AS Anular,
							--CONVERT(BIT,CASE WHEN ASPC.CODIGO_ESTADO_REGISTRO = 6 THEN 0 ELSE 1 END) AS Modifica,
							CONVERT(BIT,CASE WHEN ASPC.CODIGO_ESTADO_REGISTRO = 5 AND 
								((A.ID_REGISTRO_ENTIDAD IS NULL)
								OR
								(A.ID_REGISTRO_ENTIDAD IS NOT NULL AND A.CODIGO_REGLA = 35 AND ASPC.FECHA_FIN_ACCION_POR_SERVIDOR_PUBLICO < @FECHA))
								THEN 1 ELSE 0 END) AS Anular,
							--CONVERT(BIT,CASE WHEN ASPC.CODIGO_ESTADO_REGISTRO = 6 THEN 0 ELSE 1 END) AS Modifica,
							CONVERT(BIT,CASE WHEN ASPC.CODIGO_ESTADO_REGISTRO IN (5,9) THEN 1 ELSE 0 END) AS Modifica,
							FORMAT(ASPC.FECHA_CREACION,'dd/MM/yyyy hh:mm tt') AS FechaCrea,
							ISNULL(ASPC.NOMBRE_USUARIO_CREA,'') AS NombreUsuarioCrea,
							ISNULL(ASPC.AMBITO_USUARIO_CREA,'') AS AmbitoUsuarioCrea,
							ISNULL(ASPC.ROL_USUARIO_CREA,'') AS RolUsuarioCrea,
							FORMAT(ASPC.FECHA_MODIFICACION,'dd/MM/yyyy hh:mm tt') AS FechaModifica,
							ISNULL(ASPC.NOMBRE_USUARIO_MODIFICA,'') AS NombreUsuarioModifica,
							ISNULL(ASPC.AMBITO_USUARIO_MODIFICA,'') AS AmbitoUsuarioModifica,
							ISNULL(ASPC.ROL_USUARIO_MODIFICA,'') AS RolUsuarioModifica,
							ISNULL(CONVERT(VARCHAR,ASPC.HORAS_ADICIONALES),'') AS HorasAdicionales
					FROM	transaccional.asp_consolidado AS ASPC WITH (NOLOCK)
							LEFT JOIN #MOTIVOACCION_NOANULA AS A ON ASPC.ID_MOTIVO_ACCION = A.ID_REGISTRO_ENTIDAD
					WHERE	ASPC.ID_SERVIDOR_PUBLICO = @ID_SERVIDOR_PUBLICO
							AND ASPC.CODIGO_GRUPO_ACCION = 1 -- VINCULACION @CODIGO_GRUPO_ACCION
					ORDER BY ASPC.FECHA_RESOLUCION DESC, ASPC.ID_ACCION_POR_SERVIDOR_PUBLICO DESC
					OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY
				) r 
		 FOR XML AUTO ,TYPE)

		SET @Success = 1
		SET @Message = 'El registro se guardó satisfactoriamente.'

	END TRY  
	BEGIN CATCH  

		PRINT @MessageReal

		SET @MessageReal = ERROR_MESSAGE()
		SET @Message = @MessageReal
		SET @Severity = ERROR_SEVERITY()

		IF @Severity = 16
			SET @Message = 'Ha ocurrido un error. Contacte con el administrador del sistema.'
  
		IF @@TRANCOUNT > 0  
			ROLLBACK TRANSACTION;  
	END CATCH;  
  
	IF @@TRANCOUNT > 0  
		COMMIT TRANSACTION;

	IF @Severity = 16 AND @Success = 0
		BEGIN
			INSERT INTO [auditoria].[log_error]
			([NOMBRE_SP], [INPUT_PARAMS_XML], [MENSAJE_BD], [MENSAJE_USUARIO], [FECHA_CREACION], [USUARIO_CREACION])
			VALUES
			('USP_ESCALAFON_INS_ACCION_ESCALAFON_IOXML', @REQUEST_XML, @MessageReal, @Message, @FECHA_ACTUAL, @USUARIO)
		END

	DECLARE @xml_status_response XML = 
		(SELECT	r.Success, r.[Message], r.Id
		 FROM	(SELECT	@Success AS Success, 
						@Message AS Message,
						@ID_SERVIDOR_PUBLICO AS Id
				) r
	FOR XML AUTO ,TYPE)

	SELECT  @xml_status_response AS 'StatusResponse',
			@xml_acciones AS 'AccionServidorResponse'
    FOR     XML PATH('') ,ROOT('ROOT');

END
